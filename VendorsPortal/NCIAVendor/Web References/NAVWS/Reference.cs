//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NCIAVendor.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VendorsPortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal")]
    public partial class VendorsPortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddedCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckExistingRFQOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidVendorEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidVendorNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckVendorLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePrequalificationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePrequalificationLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRFQHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRFQReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppliedPrequalificationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentPrequalificationPeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastPrnNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyQuoteLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyQuotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenTenderLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenVendorTendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrequalificationApplicationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrequalificationApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrequalificationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnappliedPrequalificationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRFQLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotAllMandatoryDocumentsAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrequalificationAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback RFQAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitPrequalificationApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitRFQOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VendorsPortal() {
            this.Url = global::NCIAVendor.Properties.Settings.Default.NCIAVendor_NAVWS_VendorsPortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddedCategoryCompletedEventHandler AddedCategoryCompleted;
        
        /// <remarks/>
        public event CheckExistingRFQCompletedEventHandler CheckExistingRFQCompleted;
        
        /// <remarks/>
        public event CheckValidVendorEmailCompletedEventHandler CheckValidVendorEmailCompleted;
        
        /// <remarks/>
        public event CheckValidVendorNoCompletedEventHandler CheckValidVendorNoCompleted;
        
        /// <remarks/>
        public event CheckVendorLoginCompletedEventHandler CheckVendorLoginCompleted;
        
        /// <remarks/>
        public event CreatePrequalificationHeaderCompletedEventHandler CreatePrequalificationHeaderCompleted;
        
        /// <remarks/>
        public event CreatePrequalificationLineCompletedEventHandler CreatePrequalificationLineCompleted;
        
        /// <remarks/>
        public event CreateRFQHeaderCompletedEventHandler CreateRFQHeaderCompleted;
        
        /// <remarks/>
        public event DocumentAttachmentCompletedEventHandler DocumentAttachmentCompleted;
        
        /// <remarks/>
        public event FileAttachedCompletedEventHandler FileAttachedCompleted;
        
        /// <remarks/>
        public event GenerateRFQReportCompletedEventHandler GenerateRFQReportCompleted;
        
        /// <remarks/>
        public event GetAppliedPrequalificationCategoriesCompletedEventHandler GetAppliedPrequalificationCategoriesCompleted;
        
        /// <remarks/>
        public event GetCategoryNameCompletedEventHandler GetCategoryNameCompleted;
        
        /// <remarks/>
        public event GetCategoryRequirementsCompletedEventHandler GetCategoryRequirementsCompleted;
        
        /// <remarks/>
        public event GetCurrentPrequalificationPeriodCompletedEventHandler GetCurrentPrequalificationPeriodCompleted;
        
        /// <remarks/>
        public event GetLastPrnNoCompletedEventHandler GetLastPrnNoCompleted;
        
        /// <remarks/>
        public event GetMyQuoteLinesCompletedEventHandler GetMyQuoteLinesCompleted;
        
        /// <remarks/>
        public event GetMyQuotesCompletedEventHandler GetMyQuotesCompleted;
        
        /// <remarks/>
        public event GetOpenTenderLinesCompletedEventHandler GetOpenTenderLinesCompleted;
        
        /// <remarks/>
        public event GetOpenVendorTendersCompletedEventHandler GetOpenVendorTendersCompleted;
        
        /// <remarks/>
        public event GetPrequalificationApplicationCategoriesCompletedEventHandler GetPrequalificationApplicationCategoriesCompleted;
        
        /// <remarks/>
        public event GetPrequalificationApplicationsCompletedEventHandler GetPrequalificationApplicationsCompleted;
        
        /// <remarks/>
        public event GetPrequalificationCategoriesCompletedEventHandler GetPrequalificationCategoriesCompleted;
        
        /// <remarks/>
        public event GetUnappliedPrequalificationCategoriesCompletedEventHandler GetUnappliedPrequalificationCategoriesCompleted;
        
        /// <remarks/>
        public event GetVendorDetailsCompletedEventHandler GetVendorDetailsCompleted;
        
        /// <remarks/>
        public event GetVendorNameCompletedEventHandler GetVendorNameCompleted;
        
        /// <remarks/>
        public event InsertRFQLinesCompletedEventHandler InsertRFQLinesCompleted;
        
        /// <remarks/>
        public event NotAllMandatoryDocumentsAttachedCompletedEventHandler NotAllMandatoryDocumentsAttachedCompleted;
        
        /// <remarks/>
        public event PrequalificationAppliedCompletedEventHandler PrequalificationAppliedCompleted;
        
        /// <remarks/>
        public event RFQAppliedCompletedEventHandler RFQAppliedCompleted;
        
        /// <remarks/>
        public event SubmitPrequalificationApplicationCompletedEventHandler SubmitPrequalificationApplicationCompleted;
        
        /// <remarks/>
        public event SubmitRFQCompletedEventHandler SubmitRFQCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:AddedCategory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="AddedCategory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddedCategory(string vendorVat) {
            object[] results = this.Invoke("AddedCategory", new object[] {
                        vendorVat});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddedCategoryAsync(string vendorVat) {
            this.AddedCategoryAsync(vendorVat, null);
        }
        
        /// <remarks/>
        public void AddedCategoryAsync(string vendorVat, object userState) {
            if ((this.AddedCategoryOperationCompleted == null)) {
                this.AddedCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddedCategoryOperationCompleted);
            }
            this.InvokeAsync("AddedCategory", new object[] {
                        vendorVat}, this.AddedCategoryOperationCompleted, userState);
        }
        
        private void OnAddedCategoryOperationCompleted(object arg) {
            if ((this.AddedCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddedCategoryCompleted(this, new AddedCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:CheckExistingRFQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="CheckExistingRFQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckExistingRFQ(string vendorNo, string tenderNo) {
            object[] results = this.Invoke("CheckExistingRFQ", new object[] {
                        vendorNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckExistingRFQAsync(string vendorNo, string tenderNo) {
            this.CheckExistingRFQAsync(vendorNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void CheckExistingRFQAsync(string vendorNo, string tenderNo, object userState) {
            if ((this.CheckExistingRFQOperationCompleted == null)) {
                this.CheckExistingRFQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckExistingRFQOperationCompleted);
            }
            this.InvokeAsync("CheckExistingRFQ", new object[] {
                        vendorNo,
                        tenderNo}, this.CheckExistingRFQOperationCompleted, userState);
        }
        
        private void OnCheckExistingRFQOperationCompleted(object arg) {
            if ((this.CheckExistingRFQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckExistingRFQCompleted(this, new CheckExistingRFQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:CheckValidVendorEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="CheckValidVendorEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckValidVendorEmail(string email) {
            object[] results = this.Invoke("CheckValidVendorEmail", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidVendorEmailAsync(string email) {
            this.CheckValidVendorEmailAsync(email, null);
        }
        
        /// <remarks/>
        public void CheckValidVendorEmailAsync(string email, object userState) {
            if ((this.CheckValidVendorEmailOperationCompleted == null)) {
                this.CheckValidVendorEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidVendorEmailOperationCompleted);
            }
            this.InvokeAsync("CheckValidVendorEmail", new object[] {
                        email}, this.CheckValidVendorEmailOperationCompleted, userState);
        }
        
        private void OnCheckValidVendorEmailOperationCompleted(object arg) {
            if ((this.CheckValidVendorEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidVendorEmailCompleted(this, new CheckValidVendorEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:CheckValidVendorNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="CheckValidVendorNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckValidVendorNo(string vATno) {
            object[] results = this.Invoke("CheckValidVendorNo", new object[] {
                        vATno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidVendorNoAsync(string vATno) {
            this.CheckValidVendorNoAsync(vATno, null);
        }
        
        /// <remarks/>
        public void CheckValidVendorNoAsync(string vATno, object userState) {
            if ((this.CheckValidVendorNoOperationCompleted == null)) {
                this.CheckValidVendorNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidVendorNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidVendorNo", new object[] {
                        vATno}, this.CheckValidVendorNoOperationCompleted, userState);
        }
        
        private void OnCheckValidVendorNoOperationCompleted(object arg) {
            if ((this.CheckValidVendorNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidVendorNoCompleted(this, new CheckValidVendorNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:CheckVendorLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="CheckVendorLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckVendorLogin(string vATno, string password) {
            object[] results = this.Invoke("CheckVendorLogin", new object[] {
                        vATno,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckVendorLoginAsync(string vATno, string password) {
            this.CheckVendorLoginAsync(vATno, password, null);
        }
        
        /// <remarks/>
        public void CheckVendorLoginAsync(string vATno, string password, object userState) {
            if ((this.CheckVendorLoginOperationCompleted == null)) {
                this.CheckVendorLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckVendorLoginOperationCompleted);
            }
            this.InvokeAsync("CheckVendorLogin", new object[] {
                        vATno,
                        password}, this.CheckVendorLoginOperationCompleted, userState);
        }
        
        private void OnCheckVendorLoginOperationCompleted(object arg) {
            if ((this.CheckVendorLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckVendorLoginCompleted(this, new CheckVendorLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:CreatePrequalificationHeade" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="CreatePrequalificationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreatePrequalificationHeader(string vendorNo) {
            object[] results = this.Invoke("CreatePrequalificationHeader", new object[] {
                        vendorNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePrequalificationHeaderAsync(string vendorNo) {
            this.CreatePrequalificationHeaderAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void CreatePrequalificationHeaderAsync(string vendorNo, object userState) {
            if ((this.CreatePrequalificationHeaderOperationCompleted == null)) {
                this.CreatePrequalificationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePrequalificationHeaderOperationCompleted);
            }
            this.InvokeAsync("CreatePrequalificationHeader", new object[] {
                        vendorNo}, this.CreatePrequalificationHeaderOperationCompleted, userState);
        }
        
        private void OnCreatePrequalificationHeaderOperationCompleted(object arg) {
            if ((this.CreatePrequalificationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePrequalificationHeaderCompleted(this, new CreatePrequalificationHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:CreatePrequalificationLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="CreatePrequalificationLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreatePrequalificationLine(string email, string kraPin, string category) {
            object[] results = this.Invoke("CreatePrequalificationLine", new object[] {
                        email,
                        kraPin,
                        category});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePrequalificationLineAsync(string email, string kraPin, string category) {
            this.CreatePrequalificationLineAsync(email, kraPin, category, null);
        }
        
        /// <remarks/>
        public void CreatePrequalificationLineAsync(string email, string kraPin, string category, object userState) {
            if ((this.CreatePrequalificationLineOperationCompleted == null)) {
                this.CreatePrequalificationLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePrequalificationLineOperationCompleted);
            }
            this.InvokeAsync("CreatePrequalificationLine", new object[] {
                        email,
                        kraPin,
                        category}, this.CreatePrequalificationLineOperationCompleted, userState);
        }
        
        private void OnCreatePrequalificationLineOperationCompleted(object arg) {
            if ((this.CreatePrequalificationLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePrequalificationLineCompleted(this, new CreatePrequalificationLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:CreateRFQHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="CreateRFQHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRFQHeader(string vendorNo, string tenderNo) {
            object[] results = this.Invoke("CreateRFQHeader", new object[] {
                        vendorNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRFQHeaderAsync(string vendorNo, string tenderNo) {
            this.CreateRFQHeaderAsync(vendorNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void CreateRFQHeaderAsync(string vendorNo, string tenderNo, object userState) {
            if ((this.CreateRFQHeaderOperationCompleted == null)) {
                this.CreateRFQHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRFQHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateRFQHeader", new object[] {
                        vendorNo,
                        tenderNo}, this.CreateRFQHeaderOperationCompleted, userState);
        }
        
        private void OnCreateRFQHeaderOperationCompleted(object arg) {
            if ((this.CreateRFQHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRFQHeaderCompleted(this, new CreateRFQHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:DocumentAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="DocumentAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DocumentAttachment(string retNo, string fileName, string attachment, int tableId) {
            object[] results = this.Invoke("DocumentAttachment", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentAttachmentAsync(string retNo, string fileName, string attachment, int tableId) {
            this.DocumentAttachmentAsync(retNo, fileName, attachment, tableId, null);
        }
        
        /// <remarks/>
        public void DocumentAttachmentAsync(string retNo, string fileName, string attachment, int tableId, object userState) {
            if ((this.DocumentAttachmentOperationCompleted == null)) {
                this.DocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("DocumentAttachment", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId}, this.DocumentAttachmentOperationCompleted, userState);
        }
        
        private void OnDocumentAttachmentOperationCompleted(object arg) {
            if ((this.DocumentAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentAttachmentCompleted(this, new DocumentAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:FileAttached", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="FileAttached_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FileAttached(string vendorVat, string description) {
            object[] results = this.Invoke("FileAttached", new object[] {
                        vendorVat,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileAttachedAsync(string vendorVat, string description) {
            this.FileAttachedAsync(vendorVat, description, null);
        }
        
        /// <remarks/>
        public void FileAttachedAsync(string vendorVat, string description, object userState) {
            if ((this.FileAttachedOperationCompleted == null)) {
                this.FileAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileAttachedOperationCompleted);
            }
            this.InvokeAsync("FileAttached", new object[] {
                        vendorVat,
                        description}, this.FileAttachedOperationCompleted, userState);
        }
        
        private void OnFileAttachedOperationCompleted(object arg) {
            if ((this.FileAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileAttachedCompleted(this, new FileAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GenerateRFQReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GenerateRFQReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRFQReport(string tenderNo, string filenameFromApp, ref string bigtext) {
            object[] results = this.Invoke("GenerateRFQReport", new object[] {
                        tenderNo,
                        filenameFromApp,
                        bigtext});
            bigtext = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRFQReportAsync(string tenderNo, string filenameFromApp, string bigtext) {
            this.GenerateRFQReportAsync(tenderNo, filenameFromApp, bigtext, null);
        }
        
        /// <remarks/>
        public void GenerateRFQReportAsync(string tenderNo, string filenameFromApp, string bigtext, object userState) {
            if ((this.GenerateRFQReportOperationCompleted == null)) {
                this.GenerateRFQReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRFQReportOperationCompleted);
            }
            this.InvokeAsync("GenerateRFQReport", new object[] {
                        tenderNo,
                        filenameFromApp,
                        bigtext}, this.GenerateRFQReportOperationCompleted, userState);
        }
        
        private void OnGenerateRFQReportOperationCompleted(object arg) {
            if ((this.GenerateRFQReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRFQReportCompleted(this, new GenerateRFQReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetAppliedPrequalificationC" +
            "ategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetAppliedPrequalificationCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAppliedPrequalificationCategories(string kraPin) {
            object[] results = this.Invoke("GetAppliedPrequalificationCategories", new object[] {
                        kraPin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppliedPrequalificationCategoriesAsync(string kraPin) {
            this.GetAppliedPrequalificationCategoriesAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void GetAppliedPrequalificationCategoriesAsync(string kraPin, object userState) {
            if ((this.GetAppliedPrequalificationCategoriesOperationCompleted == null)) {
                this.GetAppliedPrequalificationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppliedPrequalificationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAppliedPrequalificationCategories", new object[] {
                        kraPin}, this.GetAppliedPrequalificationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAppliedPrequalificationCategoriesOperationCompleted(object arg) {
            if ((this.GetAppliedPrequalificationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppliedPrequalificationCategoriesCompleted(this, new GetAppliedPrequalificationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetCategoryName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetCategoryName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCategoryName(string categoryCode) {
            object[] results = this.Invoke("GetCategoryName", new object[] {
                        categoryCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(string categoryCode) {
            this.GetCategoryNameAsync(categoryCode, null);
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(string categoryCode, object userState) {
            if ((this.GetCategoryNameOperationCompleted == null)) {
                this.GetCategoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryNameOperationCompleted);
            }
            this.InvokeAsync("GetCategoryName", new object[] {
                        categoryCode}, this.GetCategoryNameOperationCompleted, userState);
        }
        
        private void OnGetCategoryNameOperationCompleted(object arg) {
            if ((this.GetCategoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryNameCompleted(this, new GetCategoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetCategoryRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetCategoryRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCategoryRequirements(string category, string vendorVat) {
            object[] results = this.Invoke("GetCategoryRequirements", new object[] {
                        category,
                        vendorVat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryRequirementsAsync(string category, string vendorVat) {
            this.GetCategoryRequirementsAsync(category, vendorVat, null);
        }
        
        /// <remarks/>
        public void GetCategoryRequirementsAsync(string category, string vendorVat, object userState) {
            if ((this.GetCategoryRequirementsOperationCompleted == null)) {
                this.GetCategoryRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryRequirementsOperationCompleted);
            }
            this.InvokeAsync("GetCategoryRequirements", new object[] {
                        category,
                        vendorVat}, this.GetCategoryRequirementsOperationCompleted, userState);
        }
        
        private void OnGetCategoryRequirementsOperationCompleted(object arg) {
            if ((this.GetCategoryRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryRequirementsCompleted(this, new GetCategoryRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetCurrentPrequalificationP" +
            "eriod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetCurrentPrequalificationPeriod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentPrequalificationPeriod() {
            object[] results = this.Invoke("GetCurrentPrequalificationPeriod", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentPrequalificationPeriodAsync() {
            this.GetCurrentPrequalificationPeriodAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentPrequalificationPeriodAsync(object userState) {
            if ((this.GetCurrentPrequalificationPeriodOperationCompleted == null)) {
                this.GetCurrentPrequalificationPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentPrequalificationPeriodOperationCompleted);
            }
            this.InvokeAsync("GetCurrentPrequalificationPeriod", new object[0], this.GetCurrentPrequalificationPeriodOperationCompleted, userState);
        }
        
        private void OnGetCurrentPrequalificationPeriodOperationCompleted(object arg) {
            if ((this.GetCurrentPrequalificationPeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentPrequalificationPeriodCompleted(this, new GetCurrentPrequalificationPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetLastPrnNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetLastPrnNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GetLastPrnNo() {
            object[] results = this.Invoke("GetLastPrnNo", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastPrnNoAsync() {
            this.GetLastPrnNoAsync(null);
        }
        
        /// <remarks/>
        public void GetLastPrnNoAsync(object userState) {
            if ((this.GetLastPrnNoOperationCompleted == null)) {
                this.GetLastPrnNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastPrnNoOperationCompleted);
            }
            this.InvokeAsync("GetLastPrnNo", new object[0], this.GetLastPrnNoOperationCompleted, userState);
        }
        
        private void OnGetLastPrnNoOperationCompleted(object arg) {
            if ((this.GetLastPrnNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastPrnNoCompleted(this, new GetLastPrnNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetMyQuoteLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetMyQuoteLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyQuoteLines(string vendorNo, string bidNo) {
            object[] results = this.Invoke("GetMyQuoteLines", new object[] {
                        vendorNo,
                        bidNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyQuoteLinesAsync(string vendorNo, string bidNo) {
            this.GetMyQuoteLinesAsync(vendorNo, bidNo, null);
        }
        
        /// <remarks/>
        public void GetMyQuoteLinesAsync(string vendorNo, string bidNo, object userState) {
            if ((this.GetMyQuoteLinesOperationCompleted == null)) {
                this.GetMyQuoteLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyQuoteLinesOperationCompleted);
            }
            this.InvokeAsync("GetMyQuoteLines", new object[] {
                        vendorNo,
                        bidNo}, this.GetMyQuoteLinesOperationCompleted, userState);
        }
        
        private void OnGetMyQuoteLinesOperationCompleted(object arg) {
            if ((this.GetMyQuoteLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyQuoteLinesCompleted(this, new GetMyQuoteLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetMyQuotes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetMyQuotes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyQuotes(string vendorNo) {
            object[] results = this.Invoke("GetMyQuotes", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyQuotesAsync(string vendorNo) {
            this.GetMyQuotesAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void GetMyQuotesAsync(string vendorNo, object userState) {
            if ((this.GetMyQuotesOperationCompleted == null)) {
                this.GetMyQuotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyQuotesOperationCompleted);
            }
            this.InvokeAsync("GetMyQuotes", new object[] {
                        vendorNo}, this.GetMyQuotesOperationCompleted, userState);
        }
        
        private void OnGetMyQuotesOperationCompleted(object arg) {
            if ((this.GetMyQuotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyQuotesCompleted(this, new GetMyQuotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetOpenTenderLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetOpenTenderLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenTenderLines(string tenderNo) {
            object[] results = this.Invoke("GetOpenTenderLines", new object[] {
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenTenderLinesAsync(string tenderNo) {
            this.GetOpenTenderLinesAsync(tenderNo, null);
        }
        
        /// <remarks/>
        public void GetOpenTenderLinesAsync(string tenderNo, object userState) {
            if ((this.GetOpenTenderLinesOperationCompleted == null)) {
                this.GetOpenTenderLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenTenderLinesOperationCompleted);
            }
            this.InvokeAsync("GetOpenTenderLines", new object[] {
                        tenderNo}, this.GetOpenTenderLinesOperationCompleted, userState);
        }
        
        private void OnGetOpenTenderLinesOperationCompleted(object arg) {
            if ((this.GetOpenTenderLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenTenderLinesCompleted(this, new GetOpenTenderLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetOpenVendorTenders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetOpenVendorTenders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenVendorTenders(string vendorNo) {
            object[] results = this.Invoke("GetOpenVendorTenders", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenVendorTendersAsync(string vendorNo) {
            this.GetOpenVendorTendersAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void GetOpenVendorTendersAsync(string vendorNo, object userState) {
            if ((this.GetOpenVendorTendersOperationCompleted == null)) {
                this.GetOpenVendorTendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenVendorTendersOperationCompleted);
            }
            this.InvokeAsync("GetOpenVendorTenders", new object[] {
                        vendorNo}, this.GetOpenVendorTendersOperationCompleted, userState);
        }
        
        private void OnGetOpenVendorTendersOperationCompleted(object arg) {
            if ((this.GetOpenVendorTendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenVendorTendersCompleted(this, new GetOpenVendorTendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetPrequalificationApplicat" +
            "ionCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetPrequalificationApplicationCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPrequalificationApplicationCategories(string kraPin, string period) {
            object[] results = this.Invoke("GetPrequalificationApplicationCategories", new object[] {
                        kraPin,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrequalificationApplicationCategoriesAsync(string kraPin, string period) {
            this.GetPrequalificationApplicationCategoriesAsync(kraPin, period, null);
        }
        
        /// <remarks/>
        public void GetPrequalificationApplicationCategoriesAsync(string kraPin, string period, object userState) {
            if ((this.GetPrequalificationApplicationCategoriesOperationCompleted == null)) {
                this.GetPrequalificationApplicationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrequalificationApplicationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetPrequalificationApplicationCategories", new object[] {
                        kraPin,
                        period}, this.GetPrequalificationApplicationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetPrequalificationApplicationCategoriesOperationCompleted(object arg) {
            if ((this.GetPrequalificationApplicationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrequalificationApplicationCategoriesCompleted(this, new GetPrequalificationApplicationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetPrequalificationApplicat" +
            "ions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetPrequalificationApplications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPrequalificationApplications(string kraPin, string email) {
            object[] results = this.Invoke("GetPrequalificationApplications", new object[] {
                        kraPin,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrequalificationApplicationsAsync(string kraPin, string email) {
            this.GetPrequalificationApplicationsAsync(kraPin, email, null);
        }
        
        /// <remarks/>
        public void GetPrequalificationApplicationsAsync(string kraPin, string email, object userState) {
            if ((this.GetPrequalificationApplicationsOperationCompleted == null)) {
                this.GetPrequalificationApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrequalificationApplicationsOperationCompleted);
            }
            this.InvokeAsync("GetPrequalificationApplications", new object[] {
                        kraPin,
                        email}, this.GetPrequalificationApplicationsOperationCompleted, userState);
        }
        
        private void OnGetPrequalificationApplicationsOperationCompleted(object arg) {
            if ((this.GetPrequalificationApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrequalificationApplicationsCompleted(this, new GetPrequalificationApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetPrequalificationCategori" +
            "es", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetPrequalificationCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPrequalificationCategories() {
            object[] results = this.Invoke("GetPrequalificationCategories", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrequalificationCategoriesAsync() {
            this.GetPrequalificationCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetPrequalificationCategoriesAsync(object userState) {
            if ((this.GetPrequalificationCategoriesOperationCompleted == null)) {
                this.GetPrequalificationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrequalificationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetPrequalificationCategories", new object[0], this.GetPrequalificationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetPrequalificationCategoriesOperationCompleted(object arg) {
            if ((this.GetPrequalificationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrequalificationCategoriesCompleted(this, new GetPrequalificationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetUnappliedPrequalificatio" +
            "nCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetUnappliedPrequalificationCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetUnappliedPrequalificationCategories(string kraPin) {
            object[] results = this.Invoke("GetUnappliedPrequalificationCategories", new object[] {
                        kraPin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnappliedPrequalificationCategoriesAsync(string kraPin) {
            this.GetUnappliedPrequalificationCategoriesAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void GetUnappliedPrequalificationCategoriesAsync(string kraPin, object userState) {
            if ((this.GetUnappliedPrequalificationCategoriesOperationCompleted == null)) {
                this.GetUnappliedPrequalificationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnappliedPrequalificationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetUnappliedPrequalificationCategories", new object[] {
                        kraPin}, this.GetUnappliedPrequalificationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetUnappliedPrequalificationCategoriesOperationCompleted(object arg) {
            if ((this.GetUnappliedPrequalificationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnappliedPrequalificationCategoriesCompleted(this, new GetUnappliedPrequalificationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetVendorDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetVendorDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetVendorDetails(string username) {
            object[] results = this.Invoke("GetVendorDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorDetailsAsync(string username) {
            this.GetVendorDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetVendorDetailsAsync(string username, object userState) {
            if ((this.GetVendorDetailsOperationCompleted == null)) {
                this.GetVendorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorDetailsOperationCompleted);
            }
            this.InvokeAsync("GetVendorDetails", new object[] {
                        username}, this.GetVendorDetailsOperationCompleted, userState);
        }
        
        private void OnGetVendorDetailsOperationCompleted(object arg) {
            if ((this.GetVendorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorDetailsCompleted(this, new GetVendorDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:GetVendorName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="GetVendorName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetVendorName(string vendorNo) {
            object[] results = this.Invoke("GetVendorName", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorNameAsync(string vendorNo) {
            this.GetVendorNameAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void GetVendorNameAsync(string vendorNo, object userState) {
            if ((this.GetVendorNameOperationCompleted == null)) {
                this.GetVendorNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorNameOperationCompleted);
            }
            this.InvokeAsync("GetVendorName", new object[] {
                        vendorNo}, this.GetVendorNameOperationCompleted, userState);
        }
        
        private void OnGetVendorNameOperationCompleted(object arg) {
            if ((this.GetVendorNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorNameCompleted(this, new GetVendorNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:InsertRFQLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="InsertRFQLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertRFQLines(string vendorNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt, int lineNo) {
            object[] results = this.Invoke("InsertRFQLines", new object[] {
                        vendorNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmt,
                        lineNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRFQLinesAsync(string vendorNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt, int lineNo) {
            this.InsertRFQLinesAsync(vendorNo, tenderNo, bidNo, itemNo, quotedAmt, lineNo, null);
        }
        
        /// <remarks/>
        public void InsertRFQLinesAsync(string vendorNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt, int lineNo, object userState) {
            if ((this.InsertRFQLinesOperationCompleted == null)) {
                this.InsertRFQLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRFQLinesOperationCompleted);
            }
            this.InvokeAsync("InsertRFQLines", new object[] {
                        vendorNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmt,
                        lineNo}, this.InsertRFQLinesOperationCompleted, userState);
        }
        
        private void OnInsertRFQLinesOperationCompleted(object arg) {
            if ((this.InsertRFQLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRFQLinesCompleted(this, new InsertRFQLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:NotAllMandatoryDocumentsAtt" +
            "ached", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="NotAllMandatoryDocumentsAttached_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool NotAllMandatoryDocumentsAttached(string vendorVat, string category) {
            object[] results = this.Invoke("NotAllMandatoryDocumentsAttached", new object[] {
                        vendorVat,
                        category});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotAllMandatoryDocumentsAttachedAsync(string vendorVat, string category) {
            this.NotAllMandatoryDocumentsAttachedAsync(vendorVat, category, null);
        }
        
        /// <remarks/>
        public void NotAllMandatoryDocumentsAttachedAsync(string vendorVat, string category, object userState) {
            if ((this.NotAllMandatoryDocumentsAttachedOperationCompleted == null)) {
                this.NotAllMandatoryDocumentsAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotAllMandatoryDocumentsAttachedOperationCompleted);
            }
            this.InvokeAsync("NotAllMandatoryDocumentsAttached", new object[] {
                        vendorVat,
                        category}, this.NotAllMandatoryDocumentsAttachedOperationCompleted, userState);
        }
        
        private void OnNotAllMandatoryDocumentsAttachedOperationCompleted(object arg) {
            if ((this.NotAllMandatoryDocumentsAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotAllMandatoryDocumentsAttachedCompleted(this, new NotAllMandatoryDocumentsAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:PrequalificationApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="PrequalificationApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool PrequalificationApplied(string kraPin, string email) {
            object[] results = this.Invoke("PrequalificationApplied", new object[] {
                        kraPin,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PrequalificationAppliedAsync(string kraPin, string email) {
            this.PrequalificationAppliedAsync(kraPin, email, null);
        }
        
        /// <remarks/>
        public void PrequalificationAppliedAsync(string kraPin, string email, object userState) {
            if ((this.PrequalificationAppliedOperationCompleted == null)) {
                this.PrequalificationAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrequalificationAppliedOperationCompleted);
            }
            this.InvokeAsync("PrequalificationApplied", new object[] {
                        kraPin,
                        email}, this.PrequalificationAppliedOperationCompleted, userState);
        }
        
        private void OnPrequalificationAppliedOperationCompleted(object arg) {
            if ((this.PrequalificationAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrequalificationAppliedCompleted(this, new PrequalificationAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:RFQApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="RFQApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RFQApplied(string vendorNo, string tenderNo) {
            object[] results = this.Invoke("RFQApplied", new object[] {
                        vendorNo,
                        tenderNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RFQAppliedAsync(string vendorNo, string tenderNo) {
            this.RFQAppliedAsync(vendorNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void RFQAppliedAsync(string vendorNo, string tenderNo, object userState) {
            if ((this.RFQAppliedOperationCompleted == null)) {
                this.RFQAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRFQAppliedOperationCompleted);
            }
            this.InvokeAsync("RFQApplied", new object[] {
                        vendorNo,
                        tenderNo}, this.RFQAppliedOperationCompleted, userState);
        }
        
        private void OnRFQAppliedOperationCompleted(object arg) {
            if ((this.RFQAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RFQAppliedCompleted(this, new RFQAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:SubmitPrequalificationAppli" +
            "cation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="SubmitPrequalificationApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitPrequalificationApplication(string kRAPin, string email) {
            object[] results = this.Invoke("SubmitPrequalificationApplication", new object[] {
                        kRAPin,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitPrequalificationApplicationAsync(string kRAPin, string email) {
            this.SubmitPrequalificationApplicationAsync(kRAPin, email, null);
        }
        
        /// <remarks/>
        public void SubmitPrequalificationApplicationAsync(string kRAPin, string email, object userState) {
            if ((this.SubmitPrequalificationApplicationOperationCompleted == null)) {
                this.SubmitPrequalificationApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitPrequalificationApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitPrequalificationApplication", new object[] {
                        kRAPin,
                        email}, this.SubmitPrequalificationApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitPrequalificationApplicationOperationCompleted(object arg) {
            if ((this.SubmitPrequalificationApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitPrequalificationApplicationCompleted(this, new SubmitPrequalificationApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/VendorsPortal:SubmitRFQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", ResponseElementName="SubmitRFQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/VendorsPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitRFQ(string vendorNo, string bidNo) {
            object[] results = this.Invoke("SubmitRFQ", new object[] {
                        vendorNo,
                        bidNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitRFQAsync(string vendorNo, string bidNo) {
            this.SubmitRFQAsync(vendorNo, bidNo, null);
        }
        
        /// <remarks/>
        public void SubmitRFQAsync(string vendorNo, string bidNo, object userState) {
            if ((this.SubmitRFQOperationCompleted == null)) {
                this.SubmitRFQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitRFQOperationCompleted);
            }
            this.InvokeAsync("SubmitRFQ", new object[] {
                        vendorNo,
                        bidNo}, this.SubmitRFQOperationCompleted, userState);
        }
        
        private void OnSubmitRFQOperationCompleted(object arg) {
            if ((this.SubmitRFQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitRFQCompleted(this, new SubmitRFQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddedCategoryCompletedEventHandler(object sender, AddedCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddedCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddedCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckExistingRFQCompletedEventHandler(object sender, CheckExistingRFQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckExistingRFQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckExistingRFQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckValidVendorEmailCompletedEventHandler(object sender, CheckValidVendorEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidVendorEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidVendorEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckValidVendorNoCompletedEventHandler(object sender, CheckValidVendorNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidVendorNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidVendorNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckVendorLoginCompletedEventHandler(object sender, CheckVendorLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckVendorLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckVendorLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreatePrequalificationHeaderCompletedEventHandler(object sender, CreatePrequalificationHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePrequalificationHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePrequalificationHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreatePrequalificationLineCompletedEventHandler(object sender, CreatePrequalificationLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePrequalificationLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePrequalificationLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateRFQHeaderCompletedEventHandler(object sender, CreateRFQHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRFQHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRFQHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DocumentAttachmentCompletedEventHandler(object sender, DocumentAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FileAttachedCompletedEventHandler(object sender, FileAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateRFQReportCompletedEventHandler(object sender, GenerateRFQReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRFQReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRFQReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bigtext {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAppliedPrequalificationCategoriesCompletedEventHandler(object sender, GetAppliedPrequalificationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppliedPrequalificationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppliedPrequalificationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryNameCompletedEventHandler(object sender, GetCategoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryRequirementsCompletedEventHandler(object sender, GetCategoryRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCurrentPrequalificationPeriodCompletedEventHandler(object sender, GetCurrentPrequalificationPeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentPrequalificationPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentPrequalificationPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLastPrnNoCompletedEventHandler(object sender, GetLastPrnNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastPrnNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastPrnNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyQuoteLinesCompletedEventHandler(object sender, GetMyQuoteLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyQuoteLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyQuoteLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyQuotesCompletedEventHandler(object sender, GetMyQuotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyQuotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyQuotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOpenTenderLinesCompletedEventHandler(object sender, GetOpenTenderLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenTenderLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenTenderLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOpenVendorTendersCompletedEventHandler(object sender, GetOpenVendorTendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenVendorTendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenVendorTendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrequalificationApplicationCategoriesCompletedEventHandler(object sender, GetPrequalificationApplicationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrequalificationApplicationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrequalificationApplicationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrequalificationApplicationsCompletedEventHandler(object sender, GetPrequalificationApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrequalificationApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrequalificationApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrequalificationCategoriesCompletedEventHandler(object sender, GetPrequalificationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrequalificationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrequalificationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUnappliedPrequalificationCategoriesCompletedEventHandler(object sender, GetUnappliedPrequalificationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnappliedPrequalificationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnappliedPrequalificationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetVendorDetailsCompletedEventHandler(object sender, GetVendorDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetVendorNameCompletedEventHandler(object sender, GetVendorNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertRFQLinesCompletedEventHandler(object sender, InsertRFQLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRFQLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRFQLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void NotAllMandatoryDocumentsAttachedCompletedEventHandler(object sender, NotAllMandatoryDocumentsAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotAllMandatoryDocumentsAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotAllMandatoryDocumentsAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PrequalificationAppliedCompletedEventHandler(object sender, PrequalificationAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrequalificationAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrequalificationAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RFQAppliedCompletedEventHandler(object sender, RFQAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RFQAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RFQAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitPrequalificationApplicationCompletedEventHandler(object sender, SubmitPrequalificationApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitPrequalificationApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitPrequalificationApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitRFQCompletedEventHandler(object sender, SubmitRFQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitRFQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitRFQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NCIAJobs.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="recruitment_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/recruitment")]
    public partial class recruitment : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AccountExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseAllRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOnlineAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdvertisedJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicantAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicantQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicantRefereesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAreaOfSpecializationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAreaOfStudyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConstituenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmploymentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGradesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobQualificationCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobQualificationTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobResponsibilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMinimumRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyCompleteApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNationalitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextOfKinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfessionalBodiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubCountiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubmittedMinimumRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingsAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTribesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasInsertedMinimumRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasUpdatedProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertApplicantQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertApplicantRefereesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmploymentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNextOfKinOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProfessionalBodiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProfessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTrainingAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobResponsibilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecruitmentUserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegFileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveApplicantQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveApplicantRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveEmploymentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNextOfKinOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveProfessionalBodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveProfessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTrainingAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitJobApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeMinimuRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserProfileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public recruitment() {
            this.Url = global::NCIAJobs.Properties.Settings.Default.NCIAJobs_NAVWS_recruitment;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AccountExistsCompletedEventHandler AccountExistsCompleted;
        
        /// <remarks/>
        public event CloseAllRequisitionsCompletedEventHandler CloseAllRequisitionsCompleted;
        
        /// <remarks/>
        public event CreateOnlineAccountCompletedEventHandler CreateOnlineAccountCompleted;
        
        /// <remarks/>
        public event DeleteAttachmentCompletedEventHandler DeleteAttachmentCompleted;
        
        /// <remarks/>
        public event GetAdvertisedJobsCompletedEventHandler GetAdvertisedJobsCompleted;
        
        /// <remarks/>
        public event GetApplicantAttachmentsCompletedEventHandler GetApplicantAttachmentsCompleted;
        
        /// <remarks/>
        public event GetApplicantQualificationsCompletedEventHandler GetApplicantQualificationsCompleted;
        
        /// <remarks/>
        public event GetApplicantRefereesCompletedEventHandler GetApplicantRefereesCompleted;
        
        /// <remarks/>
        public event GetAreaOfSpecializationCompletedEventHandler GetAreaOfSpecializationCompleted;
        
        /// <remarks/>
        public event GetAreaOfStudyCompletedEventHandler GetAreaOfStudyCompleted;
        
        /// <remarks/>
        public event GetAwardCompletedEventHandler GetAwardCompleted;
        
        /// <remarks/>
        public event GetConstituenciesCompletedEventHandler GetConstituenciesCompleted;
        
        /// <remarks/>
        public event GetCountiesCompletedEventHandler GetCountiesCompleted;
        
        /// <remarks/>
        public event GetCourseCompletedEventHandler GetCourseCompleted;
        
        /// <remarks/>
        public event GetEmploymentDetailsCompletedEventHandler GetEmploymentDetailsCompleted;
        
        /// <remarks/>
        public event GetGradesCompletedEventHandler GetGradesCompleted;
        
        /// <remarks/>
        public event GetJobQualificationCodesCompletedEventHandler GetJobQualificationCodesCompleted;
        
        /// <remarks/>
        public event GetJobQualificationTypeCompletedEventHandler GetJobQualificationTypeCompleted;
        
        /// <remarks/>
        public event GetJobRequirementsCompletedEventHandler GetJobRequirementsCompleted;
        
        /// <remarks/>
        public event GetJobResponsibilitiesCompletedEventHandler GetJobResponsibilitiesCompleted;
        
        /// <remarks/>
        public event GetJobTitleCompletedEventHandler GetJobTitleCompleted;
        
        /// <remarks/>
        public event GetMinimumRequirementsCompletedEventHandler GetMinimumRequirementsCompleted;
        
        /// <remarks/>
        public event GetMyApplicationsCompletedEventHandler GetMyApplicationsCompleted;
        
        /// <remarks/>
        public event GetMyCompleteApplicationsCompletedEventHandler GetMyCompleteApplicationsCompleted;
        
        /// <remarks/>
        public event GetNationalitiesCompletedEventHandler GetNationalitiesCompleted;
        
        /// <remarks/>
        public event GetNextOfKinCompletedEventHandler GetNextOfKinCompleted;
        
        /// <remarks/>
        public event GetProfessionalBodiesCompletedEventHandler GetProfessionalBodiesCompleted;
        
        /// <remarks/>
        public event GetProfessionalQualificationsCompletedEventHandler GetProfessionalQualificationsCompleted;
        
        /// <remarks/>
        public event GetRelativesCompletedEventHandler GetRelativesCompleted;
        
        /// <remarks/>
        public event GetSubCountiesCompletedEventHandler GetSubCountiesCompleted;
        
        /// <remarks/>
        public event GetSubmittedMinimumRequirementsCompletedEventHandler GetSubmittedMinimumRequirementsCompleted;
        
        /// <remarks/>
        public event GetTrainingsAttendedCompletedEventHandler GetTrainingsAttendedCompleted;
        
        /// <remarks/>
        public event GetTribesCompletedEventHandler GetTribesCompleted;
        
        /// <remarks/>
        public event GetUserDataCompletedEventHandler GetUserDataCompleted;
        
        /// <remarks/>
        public event HasInsertedMinimumRequirementCompletedEventHandler HasInsertedMinimumRequirementCompleted;
        
        /// <remarks/>
        public event HasUpdatedProfileCompletedEventHandler HasUpdatedProfileCompleted;
        
        /// <remarks/>
        public event InsertApplicantQualificationCompletedEventHandler InsertApplicantQualificationCompleted;
        
        /// <remarks/>
        public event InsertApplicantRefereesCompletedEventHandler InsertApplicantRefereesCompleted;
        
        /// <remarks/>
        public event InsertEmploymentDetailsCompletedEventHandler InsertEmploymentDetailsCompleted;
        
        /// <remarks/>
        public event InsertNextOfKinCompletedEventHandler InsertNextOfKinCompleted;
        
        /// <remarks/>
        public event InsertProfessionalBodiesCompletedEventHandler InsertProfessionalBodiesCompleted;
        
        /// <remarks/>
        public event InsertProfessionalQualificationsCompletedEventHandler InsertProfessionalQualificationsCompleted;
        
        /// <remarks/>
        public event InsertTrainingAttendedCompletedEventHandler InsertTrainingAttendedCompleted;
        
        /// <remarks/>
        public event JobRequirementsCompletedEventHandler JobRequirementsCompleted;
        
        /// <remarks/>
        public event JobResponsibilitiesCompletedEventHandler JobResponsibilitiesCompleted;
        
        /// <remarks/>
        public event RecruitmentUserLoginCompletedEventHandler RecruitmentUserLoginCompleted;
        
        /// <remarks/>
        public event RegFileUploadCompletedEventHandler RegFileUploadCompleted;
        
        /// <remarks/>
        public event RemoveApplicantQualificationsCompletedEventHandler RemoveApplicantQualificationsCompleted;
        
        /// <remarks/>
        public event RemoveApplicantRefereeCompletedEventHandler RemoveApplicantRefereeCompleted;
        
        /// <remarks/>
        public event RemoveEmploymentDetailsCompletedEventHandler RemoveEmploymentDetailsCompleted;
        
        /// <remarks/>
        public event RemoveNextOfKinCompletedEventHandler RemoveNextOfKinCompleted;
        
        /// <remarks/>
        public event RemoveProfessionalBodyCompletedEventHandler RemoveProfessionalBodyCompleted;
        
        /// <remarks/>
        public event RemoveProfessionalQualificationsCompletedEventHandler RemoveProfessionalQualificationsCompleted;
        
        /// <remarks/>
        public event RemoveTrainingAttendedCompletedEventHandler RemoveTrainingAttendedCompleted;
        
        /// <remarks/>
        public event SubmitApplicationCompletedEventHandler SubmitApplicationCompleted;
        
        /// <remarks/>
        public event SubmitJobApplicationCompletedEventHandler SubmitJobApplicationCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeMinimuRequirementCompletedEventHandler UpdateEmployeeMinimuRequirementCompleted;
        
        /// <remarks/>
        public event UpdateUserPasswordCompletedEventHandler UpdateUserPasswordCompleted;
        
        /// <remarks/>
        public event UpdateUserProfileCompletedEventHandler UpdateUserProfileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:AccountExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="AccountExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AccountExists(string idNumber) {
            object[] results = this.Invoke("AccountExists", new object[] {
                        idNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AccountExistsAsync(string idNumber) {
            this.AccountExistsAsync(idNumber, null);
        }
        
        /// <remarks/>
        public void AccountExistsAsync(string idNumber, object userState) {
            if ((this.AccountExistsOperationCompleted == null)) {
                this.AccountExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountExistsOperationCompleted);
            }
            this.InvokeAsync("AccountExists", new object[] {
                        idNumber}, this.AccountExistsOperationCompleted, userState);
        }
        
        private void OnAccountExistsOperationCompleted(object arg) {
            if ((this.AccountExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountExistsCompleted(this, new AccountExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:CloseAllRequisitions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="CloseAllRequisitions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseAllRequisitions() {
            this.Invoke("CloseAllRequisitions", new object[0]);
        }
        
        /// <remarks/>
        public void CloseAllRequisitionsAsync() {
            this.CloseAllRequisitionsAsync(null);
        }
        
        /// <remarks/>
        public void CloseAllRequisitionsAsync(object userState) {
            if ((this.CloseAllRequisitionsOperationCompleted == null)) {
                this.CloseAllRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseAllRequisitionsOperationCompleted);
            }
            this.InvokeAsync("CloseAllRequisitions", new object[0], this.CloseAllRequisitionsOperationCompleted, userState);
        }
        
        private void OnCloseAllRequisitionsOperationCompleted(object arg) {
            if ((this.CloseAllRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseAllRequisitionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:CreateOnlineAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="CreateOnlineAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateOnlineAccount(string idNumber, string firstName, string middleName, string lastName, string password, string email) {
            object[] results = this.Invoke("CreateOnlineAccount", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        password,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOnlineAccountAsync(string idNumber, string firstName, string middleName, string lastName, string password, string email) {
            this.CreateOnlineAccountAsync(idNumber, firstName, middleName, lastName, password, email, null);
        }
        
        /// <remarks/>
        public void CreateOnlineAccountAsync(string idNumber, string firstName, string middleName, string lastName, string password, string email, object userState) {
            if ((this.CreateOnlineAccountOperationCompleted == null)) {
                this.CreateOnlineAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOnlineAccountOperationCompleted);
            }
            this.InvokeAsync("CreateOnlineAccount", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        password,
                        email}, this.CreateOnlineAccountOperationCompleted, userState);
        }
        
        private void OnCreateOnlineAccountOperationCompleted(object arg) {
            if ((this.CreateOnlineAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOnlineAccountCompleted(this, new CreateOnlineAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:DeleteAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="DeleteAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAttachment(string systemId) {
            object[] results = this.Invoke("DeleteAttachment", new object[] {
                        systemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(string systemId) {
            this.DeleteAttachmentAsync(systemId, null);
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(string systemId, object userState) {
            if ((this.DeleteAttachmentOperationCompleted == null)) {
                this.DeleteAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteAttachment", new object[] {
                        systemId}, this.DeleteAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteAttachmentOperationCompleted(object arg) {
            if ((this.DeleteAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttachmentCompleted(this, new DeleteAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetAdvertisedJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetAdvertisedJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAdvertisedJobs() {
            object[] results = this.Invoke("GetAdvertisedJobs", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdvertisedJobsAsync() {
            this.GetAdvertisedJobsAsync(null);
        }
        
        /// <remarks/>
        public void GetAdvertisedJobsAsync(object userState) {
            if ((this.GetAdvertisedJobsOperationCompleted == null)) {
                this.GetAdvertisedJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdvertisedJobsOperationCompleted);
            }
            this.InvokeAsync("GetAdvertisedJobs", new object[0], this.GetAdvertisedJobsOperationCompleted, userState);
        }
        
        private void OnGetAdvertisedJobsOperationCompleted(object arg) {
            if ((this.GetAdvertisedJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdvertisedJobsCompleted(this, new GetAdvertisedJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetApplicantAttachments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetApplicantAttachments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetApplicantAttachments(string applicationNo) {
            object[] results = this.Invoke("GetApplicantAttachments", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicantAttachmentsAsync(string applicationNo) {
            this.GetApplicantAttachmentsAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void GetApplicantAttachmentsAsync(string applicationNo, object userState) {
            if ((this.GetApplicantAttachmentsOperationCompleted == null)) {
                this.GetApplicantAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicantAttachmentsOperationCompleted);
            }
            this.InvokeAsync("GetApplicantAttachments", new object[] {
                        applicationNo}, this.GetApplicantAttachmentsOperationCompleted, userState);
        }
        
        private void OnGetApplicantAttachmentsOperationCompleted(object arg) {
            if ((this.GetApplicantAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicantAttachmentsCompleted(this, new GetApplicantAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetApplicantQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetApplicantQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetApplicantQualifications(string applicationNo) {
            object[] results = this.Invoke("GetApplicantQualifications", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicantQualificationsAsync(string applicationNo) {
            this.GetApplicantQualificationsAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void GetApplicantQualificationsAsync(string applicationNo, object userState) {
            if ((this.GetApplicantQualificationsOperationCompleted == null)) {
                this.GetApplicantQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicantQualificationsOperationCompleted);
            }
            this.InvokeAsync("GetApplicantQualifications", new object[] {
                        applicationNo}, this.GetApplicantQualificationsOperationCompleted, userState);
        }
        
        private void OnGetApplicantQualificationsOperationCompleted(object arg) {
            if ((this.GetApplicantQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicantQualificationsCompleted(this, new GetApplicantQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetApplicantReferees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetApplicantReferees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetApplicantReferees(string applicationNo) {
            object[] results = this.Invoke("GetApplicantReferees", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicantRefereesAsync(string applicationNo) {
            this.GetApplicantRefereesAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void GetApplicantRefereesAsync(string applicationNo, object userState) {
            if ((this.GetApplicantRefereesOperationCompleted == null)) {
                this.GetApplicantRefereesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicantRefereesOperationCompleted);
            }
            this.InvokeAsync("GetApplicantReferees", new object[] {
                        applicationNo}, this.GetApplicantRefereesOperationCompleted, userState);
        }
        
        private void OnGetApplicantRefereesOperationCompleted(object arg) {
            if ((this.GetApplicantRefereesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicantRefereesCompleted(this, new GetApplicantRefereesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetAreaOfSpecialization", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetAreaOfSpecialization_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAreaOfSpecialization(string areaOfStudy) {
            object[] results = this.Invoke("GetAreaOfSpecialization", new object[] {
                        areaOfStudy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAreaOfSpecializationAsync(string areaOfStudy) {
            this.GetAreaOfSpecializationAsync(areaOfStudy, null);
        }
        
        /// <remarks/>
        public void GetAreaOfSpecializationAsync(string areaOfStudy, object userState) {
            if ((this.GetAreaOfSpecializationOperationCompleted == null)) {
                this.GetAreaOfSpecializationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAreaOfSpecializationOperationCompleted);
            }
            this.InvokeAsync("GetAreaOfSpecialization", new object[] {
                        areaOfStudy}, this.GetAreaOfSpecializationOperationCompleted, userState);
        }
        
        private void OnGetAreaOfSpecializationOperationCompleted(object arg) {
            if ((this.GetAreaOfSpecializationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAreaOfSpecializationCompleted(this, new GetAreaOfSpecializationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetAreaOfStudy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetAreaOfStudy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAreaOfStudy() {
            object[] results = this.Invoke("GetAreaOfStudy", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAreaOfStudyAsync() {
            this.GetAreaOfStudyAsync(null);
        }
        
        /// <remarks/>
        public void GetAreaOfStudyAsync(object userState) {
            if ((this.GetAreaOfStudyOperationCompleted == null)) {
                this.GetAreaOfStudyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAreaOfStudyOperationCompleted);
            }
            this.InvokeAsync("GetAreaOfStudy", new object[0], this.GetAreaOfStudyOperationCompleted, userState);
        }
        
        private void OnGetAreaOfStudyOperationCompleted(object arg) {
            if ((this.GetAreaOfStudyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAreaOfStudyCompleted(this, new GetAreaOfStudyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetAward", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetAward_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAward(string areaOfSpecialization) {
            object[] results = this.Invoke("GetAward", new object[] {
                        areaOfSpecialization});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAwardAsync(string areaOfSpecialization) {
            this.GetAwardAsync(areaOfSpecialization, null);
        }
        
        /// <remarks/>
        public void GetAwardAsync(string areaOfSpecialization, object userState) {
            if ((this.GetAwardOperationCompleted == null)) {
                this.GetAwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAwardOperationCompleted);
            }
            this.InvokeAsync("GetAward", new object[] {
                        areaOfSpecialization}, this.GetAwardOperationCompleted, userState);
        }
        
        private void OnGetAwardOperationCompleted(object arg) {
            if ((this.GetAwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAwardCompleted(this, new GetAwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetConstituencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetConstituencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetConstituencies(string subCounty) {
            object[] results = this.Invoke("GetConstituencies", new object[] {
                        subCounty});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConstituenciesAsync(string subCounty) {
            this.GetConstituenciesAsync(subCounty, null);
        }
        
        /// <remarks/>
        public void GetConstituenciesAsync(string subCounty, object userState) {
            if ((this.GetConstituenciesOperationCompleted == null)) {
                this.GetConstituenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConstituenciesOperationCompleted);
            }
            this.InvokeAsync("GetConstituencies", new object[] {
                        subCounty}, this.GetConstituenciesOperationCompleted, userState);
        }
        
        private void OnGetConstituenciesOperationCompleted(object arg) {
            if ((this.GetConstituenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConstituenciesCompleted(this, new GetConstituenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetCounties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetCounties_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCounties() {
            object[] results = this.Invoke("GetCounties", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountiesAsync() {
            this.GetCountiesAsync(null);
        }
        
        /// <remarks/>
        public void GetCountiesAsync(object userState) {
            if ((this.GetCountiesOperationCompleted == null)) {
                this.GetCountiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountiesOperationCompleted);
            }
            this.InvokeAsync("GetCounties", new object[0], this.GetCountiesOperationCompleted, userState);
        }
        
        private void OnGetCountiesOperationCompleted(object arg) {
            if ((this.GetCountiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountiesCompleted(this, new GetCountiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetCourse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetCourse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCourse(string award, string areaOfSpecialization) {
            object[] results = this.Invoke("GetCourse", new object[] {
                        award,
                        areaOfSpecialization});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCourseAsync(string award, string areaOfSpecialization) {
            this.GetCourseAsync(award, areaOfSpecialization, null);
        }
        
        /// <remarks/>
        public void GetCourseAsync(string award, string areaOfSpecialization, object userState) {
            if ((this.GetCourseOperationCompleted == null)) {
                this.GetCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourseOperationCompleted);
            }
            this.InvokeAsync("GetCourse", new object[] {
                        award,
                        areaOfSpecialization}, this.GetCourseOperationCompleted, userState);
        }
        
        private void OnGetCourseOperationCompleted(object arg) {
            if ((this.GetCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourseCompleted(this, new GetCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetEmploymentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetEmploymentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetEmploymentDetails(string username) {
            object[] results = this.Invoke("GetEmploymentDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmploymentDetailsAsync(string username) {
            this.GetEmploymentDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetEmploymentDetailsAsync(string username, object userState) {
            if ((this.GetEmploymentDetailsOperationCompleted == null)) {
                this.GetEmploymentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmploymentDetailsOperationCompleted);
            }
            this.InvokeAsync("GetEmploymentDetails", new object[] {
                        username}, this.GetEmploymentDetailsOperationCompleted, userState);
        }
        
        private void OnGetEmploymentDetailsOperationCompleted(object arg) {
            if ((this.GetEmploymentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmploymentDetailsCompleted(this, new GetEmploymentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetGrades", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetGrades_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetGrades(string course) {
            object[] results = this.Invoke("GetGrades", new object[] {
                        course});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGradesAsync(string course) {
            this.GetGradesAsync(course, null);
        }
        
        /// <remarks/>
        public void GetGradesAsync(string course, object userState) {
            if ((this.GetGradesOperationCompleted == null)) {
                this.GetGradesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGradesOperationCompleted);
            }
            this.InvokeAsync("GetGrades", new object[] {
                        course}, this.GetGradesOperationCompleted, userState);
        }
        
        private void OnGetGradesOperationCompleted(object arg) {
            if ((this.GetGradesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGradesCompleted(this, new GetGradesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetJobQualificationCodes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetJobQualificationCodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetJobQualificationCodes(string jobId, string qualificationType) {
            object[] results = this.Invoke("GetJobQualificationCodes", new object[] {
                        jobId,
                        qualificationType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobQualificationCodesAsync(string jobId, string qualificationType) {
            this.GetJobQualificationCodesAsync(jobId, qualificationType, null);
        }
        
        /// <remarks/>
        public void GetJobQualificationCodesAsync(string jobId, string qualificationType, object userState) {
            if ((this.GetJobQualificationCodesOperationCompleted == null)) {
                this.GetJobQualificationCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobQualificationCodesOperationCompleted);
            }
            this.InvokeAsync("GetJobQualificationCodes", new object[] {
                        jobId,
                        qualificationType}, this.GetJobQualificationCodesOperationCompleted, userState);
        }
        
        private void OnGetJobQualificationCodesOperationCompleted(object arg) {
            if ((this.GetJobQualificationCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobQualificationCodesCompleted(this, new GetJobQualificationCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetJobQualificationType", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetJobQualificationType_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetJobQualificationType(string jobId) {
            object[] results = this.Invoke("GetJobQualificationType", new object[] {
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobQualificationTypeAsync(string jobId) {
            this.GetJobQualificationTypeAsync(jobId, null);
        }
        
        /// <remarks/>
        public void GetJobQualificationTypeAsync(string jobId, object userState) {
            if ((this.GetJobQualificationTypeOperationCompleted == null)) {
                this.GetJobQualificationTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobQualificationTypeOperationCompleted);
            }
            this.InvokeAsync("GetJobQualificationType", new object[] {
                        jobId}, this.GetJobQualificationTypeOperationCompleted, userState);
        }
        
        private void OnGetJobQualificationTypeOperationCompleted(object arg) {
            if ((this.GetJobQualificationTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobQualificationTypeCompleted(this, new GetJobQualificationTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetJobRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetJobRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetJobRequirements(string jobId) {
            object[] results = this.Invoke("GetJobRequirements", new object[] {
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobRequirementsAsync(string jobId) {
            this.GetJobRequirementsAsync(jobId, null);
        }
        
        /// <remarks/>
        public void GetJobRequirementsAsync(string jobId, object userState) {
            if ((this.GetJobRequirementsOperationCompleted == null)) {
                this.GetJobRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobRequirementsOperationCompleted);
            }
            this.InvokeAsync("GetJobRequirements", new object[] {
                        jobId}, this.GetJobRequirementsOperationCompleted, userState);
        }
        
        private void OnGetJobRequirementsOperationCompleted(object arg) {
            if ((this.GetJobRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobRequirementsCompleted(this, new GetJobRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetJobResponsibilities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetJobResponsibilities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetJobResponsibilities(string jobId) {
            object[] results = this.Invoke("GetJobResponsibilities", new object[] {
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobResponsibilitiesAsync(string jobId) {
            this.GetJobResponsibilitiesAsync(jobId, null);
        }
        
        /// <remarks/>
        public void GetJobResponsibilitiesAsync(string jobId, object userState) {
            if ((this.GetJobResponsibilitiesOperationCompleted == null)) {
                this.GetJobResponsibilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobResponsibilitiesOperationCompleted);
            }
            this.InvokeAsync("GetJobResponsibilities", new object[] {
                        jobId}, this.GetJobResponsibilitiesOperationCompleted, userState);
        }
        
        private void OnGetJobResponsibilitiesOperationCompleted(object arg) {
            if ((this.GetJobResponsibilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobResponsibilitiesCompleted(this, new GetJobResponsibilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetJobTitle", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetJobTitle_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetJobTitle(string jobId) {
            object[] results = this.Invoke("GetJobTitle", new object[] {
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobTitleAsync(string jobId) {
            this.GetJobTitleAsync(jobId, null);
        }
        
        /// <remarks/>
        public void GetJobTitleAsync(string jobId, object userState) {
            if ((this.GetJobTitleOperationCompleted == null)) {
                this.GetJobTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobTitleOperationCompleted);
            }
            this.InvokeAsync("GetJobTitle", new object[] {
                        jobId}, this.GetJobTitleOperationCompleted, userState);
        }
        
        private void OnGetJobTitleOperationCompleted(object arg) {
            if ((this.GetJobTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobTitleCompleted(this, new GetJobTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetMinimumRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetMinimumRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMinimumRequirements(string jobId) {
            object[] results = this.Invoke("GetMinimumRequirements", new object[] {
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMinimumRequirementsAsync(string jobId) {
            this.GetMinimumRequirementsAsync(jobId, null);
        }
        
        /// <remarks/>
        public void GetMinimumRequirementsAsync(string jobId, object userState) {
            if ((this.GetMinimumRequirementsOperationCompleted == null)) {
                this.GetMinimumRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMinimumRequirementsOperationCompleted);
            }
            this.InvokeAsync("GetMinimumRequirements", new object[] {
                        jobId}, this.GetMinimumRequirementsOperationCompleted, userState);
        }
        
        private void OnGetMinimumRequirementsOperationCompleted(object arg) {
            if ((this.GetMinimumRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMinimumRequirementsCompleted(this, new GetMinimumRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetMyApplications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetMyApplications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyApplications(string username) {
            object[] results = this.Invoke("GetMyApplications", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyApplicationsAsync(string username) {
            this.GetMyApplicationsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMyApplicationsAsync(string username, object userState) {
            if ((this.GetMyApplicationsOperationCompleted == null)) {
                this.GetMyApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyApplicationsOperationCompleted);
            }
            this.InvokeAsync("GetMyApplications", new object[] {
                        username}, this.GetMyApplicationsOperationCompleted, userState);
        }
        
        private void OnGetMyApplicationsOperationCompleted(object arg) {
            if ((this.GetMyApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyApplicationsCompleted(this, new GetMyApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetMyCompleteApplications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetMyCompleteApplications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyCompleteApplications(string username) {
            object[] results = this.Invoke("GetMyCompleteApplications", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyCompleteApplicationsAsync(string username) {
            this.GetMyCompleteApplicationsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMyCompleteApplicationsAsync(string username, object userState) {
            if ((this.GetMyCompleteApplicationsOperationCompleted == null)) {
                this.GetMyCompleteApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyCompleteApplicationsOperationCompleted);
            }
            this.InvokeAsync("GetMyCompleteApplications", new object[] {
                        username}, this.GetMyCompleteApplicationsOperationCompleted, userState);
        }
        
        private void OnGetMyCompleteApplicationsOperationCompleted(object arg) {
            if ((this.GetMyCompleteApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyCompleteApplicationsCompleted(this, new GetMyCompleteApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetNationalities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetNationalities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetNationalities() {
            object[] results = this.Invoke("GetNationalities", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNationalitiesAsync() {
            this.GetNationalitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetNationalitiesAsync(object userState) {
            if ((this.GetNationalitiesOperationCompleted == null)) {
                this.GetNationalitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNationalitiesOperationCompleted);
            }
            this.InvokeAsync("GetNationalities", new object[0], this.GetNationalitiesOperationCompleted, userState);
        }
        
        private void OnGetNationalitiesOperationCompleted(object arg) {
            if ((this.GetNationalitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNationalitiesCompleted(this, new GetNationalitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetNextOfKin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetNextOfKin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetNextOfKin(string applicationNo) {
            object[] results = this.Invoke("GetNextOfKin", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextOfKinAsync(string applicationNo) {
            this.GetNextOfKinAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void GetNextOfKinAsync(string applicationNo, object userState) {
            if ((this.GetNextOfKinOperationCompleted == null)) {
                this.GetNextOfKinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextOfKinOperationCompleted);
            }
            this.InvokeAsync("GetNextOfKin", new object[] {
                        applicationNo}, this.GetNextOfKinOperationCompleted, userState);
        }
        
        private void OnGetNextOfKinOperationCompleted(object arg) {
            if ((this.GetNextOfKinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextOfKinCompleted(this, new GetNextOfKinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetProfessionalBodies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetProfessionalBodies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProfessionalBodies(string applicationNo) {
            object[] results = this.Invoke("GetProfessionalBodies", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfessionalBodiesAsync(string applicationNo) {
            this.GetProfessionalBodiesAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void GetProfessionalBodiesAsync(string applicationNo, object userState) {
            if ((this.GetProfessionalBodiesOperationCompleted == null)) {
                this.GetProfessionalBodiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfessionalBodiesOperationCompleted);
            }
            this.InvokeAsync("GetProfessionalBodies", new object[] {
                        applicationNo}, this.GetProfessionalBodiesOperationCompleted, userState);
        }
        
        private void OnGetProfessionalBodiesOperationCompleted(object arg) {
            if ((this.GetProfessionalBodiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfessionalBodiesCompleted(this, new GetProfessionalBodiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetProfessionalQualifications" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetProfessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProfessionalQualifications(string applicationNo) {
            object[] results = this.Invoke("GetProfessionalQualifications", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfessionalQualificationsAsync(string applicationNo) {
            this.GetProfessionalQualificationsAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void GetProfessionalQualificationsAsync(string applicationNo, object userState) {
            if ((this.GetProfessionalQualificationsOperationCompleted == null)) {
                this.GetProfessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("GetProfessionalQualifications", new object[] {
                        applicationNo}, this.GetProfessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnGetProfessionalQualificationsOperationCompleted(object arg) {
            if ((this.GetProfessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfessionalQualificationsCompleted(this, new GetProfessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetRelatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetRelatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetRelatives() {
            object[] results = this.Invoke("GetRelatives", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelativesAsync() {
            this.GetRelativesAsync(null);
        }
        
        /// <remarks/>
        public void GetRelativesAsync(object userState) {
            if ((this.GetRelativesOperationCompleted == null)) {
                this.GetRelativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelativesOperationCompleted);
            }
            this.InvokeAsync("GetRelatives", new object[0], this.GetRelativesOperationCompleted, userState);
        }
        
        private void OnGetRelativesOperationCompleted(object arg) {
            if ((this.GetRelativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelativesCompleted(this, new GetRelativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetSubCounties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetSubCounties_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetSubCounties(string county) {
            object[] results = this.Invoke("GetSubCounties", new object[] {
                        county});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubCountiesAsync(string county) {
            this.GetSubCountiesAsync(county, null);
        }
        
        /// <remarks/>
        public void GetSubCountiesAsync(string county, object userState) {
            if ((this.GetSubCountiesOperationCompleted == null)) {
                this.GetSubCountiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubCountiesOperationCompleted);
            }
            this.InvokeAsync("GetSubCounties", new object[] {
                        county}, this.GetSubCountiesOperationCompleted, userState);
        }
        
        private void OnGetSubCountiesOperationCompleted(object arg) {
            if ((this.GetSubCountiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubCountiesCompleted(this, new GetSubCountiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetSubmittedMinimumRequiremen" +
            "ts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetSubmittedMinimumRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetSubmittedMinimumRequirements(string jobId, string refNo, string applicationNo) {
            object[] results = this.Invoke("GetSubmittedMinimumRequirements", new object[] {
                        jobId,
                        refNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubmittedMinimumRequirementsAsync(string jobId, string refNo, string applicationNo) {
            this.GetSubmittedMinimumRequirementsAsync(jobId, refNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void GetSubmittedMinimumRequirementsAsync(string jobId, string refNo, string applicationNo, object userState) {
            if ((this.GetSubmittedMinimumRequirementsOperationCompleted == null)) {
                this.GetSubmittedMinimumRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubmittedMinimumRequirementsOperationCompleted);
            }
            this.InvokeAsync("GetSubmittedMinimumRequirements", new object[] {
                        jobId,
                        refNo,
                        applicationNo}, this.GetSubmittedMinimumRequirementsOperationCompleted, userState);
        }
        
        private void OnGetSubmittedMinimumRequirementsOperationCompleted(object arg) {
            if ((this.GetSubmittedMinimumRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubmittedMinimumRequirementsCompleted(this, new GetSubmittedMinimumRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetTrainingsAttended", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetTrainingsAttended_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTrainingsAttended(string username) {
            object[] results = this.Invoke("GetTrainingsAttended", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingsAttendedAsync(string username) {
            this.GetTrainingsAttendedAsync(username, null);
        }
        
        /// <remarks/>
        public void GetTrainingsAttendedAsync(string username, object userState) {
            if ((this.GetTrainingsAttendedOperationCompleted == null)) {
                this.GetTrainingsAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingsAttendedOperationCompleted);
            }
            this.InvokeAsync("GetTrainingsAttended", new object[] {
                        username}, this.GetTrainingsAttendedOperationCompleted, userState);
        }
        
        private void OnGetTrainingsAttendedOperationCompleted(object arg) {
            if ((this.GetTrainingsAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingsAttendedCompleted(this, new GetTrainingsAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetTribes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetTribes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTribes() {
            object[] results = this.Invoke("GetTribes", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTribesAsync() {
            this.GetTribesAsync(null);
        }
        
        /// <remarks/>
        public void GetTribesAsync(object userState) {
            if ((this.GetTribesOperationCompleted == null)) {
                this.GetTribesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTribesOperationCompleted);
            }
            this.InvokeAsync("GetTribes", new object[0], this.GetTribesOperationCompleted, userState);
        }
        
        private void OnGetTribesOperationCompleted(object arg) {
            if ((this.GetTribesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTribesCompleted(this, new GetTribesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:GetUserData", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="GetUserData_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetUserData(string idNumber) {
            object[] results = this.Invoke("GetUserData", new object[] {
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDataAsync(string idNumber) {
            this.GetUserDataAsync(idNumber, null);
        }
        
        /// <remarks/>
        public void GetUserDataAsync(string idNumber, object userState) {
            if ((this.GetUserDataOperationCompleted == null)) {
                this.GetUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDataOperationCompleted);
            }
            this.InvokeAsync("GetUserData", new object[] {
                        idNumber}, this.GetUserDataOperationCompleted, userState);
        }
        
        private void OnGetUserDataOperationCompleted(object arg) {
            if ((this.GetUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDataCompleted(this, new GetUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:HasInsertedMinimumRequirement" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="HasInsertedMinimumRequirement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool HasInsertedMinimumRequirement(string applicationNo, string refNo, string code, string jobId, string description) {
            object[] results = this.Invoke("HasInsertedMinimumRequirement", new object[] {
                        applicationNo,
                        refNo,
                        code,
                        jobId,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasInsertedMinimumRequirementAsync(string applicationNo, string refNo, string code, string jobId, string description) {
            this.HasInsertedMinimumRequirementAsync(applicationNo, refNo, code, jobId, description, null);
        }
        
        /// <remarks/>
        public void HasInsertedMinimumRequirementAsync(string applicationNo, string refNo, string code, string jobId, string description, object userState) {
            if ((this.HasInsertedMinimumRequirementOperationCompleted == null)) {
                this.HasInsertedMinimumRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasInsertedMinimumRequirementOperationCompleted);
            }
            this.InvokeAsync("HasInsertedMinimumRequirement", new object[] {
                        applicationNo,
                        refNo,
                        code,
                        jobId,
                        description}, this.HasInsertedMinimumRequirementOperationCompleted, userState);
        }
        
        private void OnHasInsertedMinimumRequirementOperationCompleted(object arg) {
            if ((this.HasInsertedMinimumRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasInsertedMinimumRequirementCompleted(this, new HasInsertedMinimumRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:HasUpdatedProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="HasUpdatedProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool HasUpdatedProfile(string idNumber) {
            object[] results = this.Invoke("HasUpdatedProfile", new object[] {
                        idNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasUpdatedProfileAsync(string idNumber) {
            this.HasUpdatedProfileAsync(idNumber, null);
        }
        
        /// <remarks/>
        public void HasUpdatedProfileAsync(string idNumber, object userState) {
            if ((this.HasUpdatedProfileOperationCompleted == null)) {
                this.HasUpdatedProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasUpdatedProfileOperationCompleted);
            }
            this.InvokeAsync("HasUpdatedProfile", new object[] {
                        idNumber}, this.HasUpdatedProfileOperationCompleted, userState);
        }
        
        private void OnHasUpdatedProfileOperationCompleted(object arg) {
            if ((this.HasUpdatedProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasUpdatedProfileCompleted(this, new HasUpdatedProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:InsertApplicantQualification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="InsertApplicantQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertApplicantQualification(string applicationNo, string areaOfStudy, string areaOfSpecialization, string award, string course, string grade, string institution, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo) {
            object[] results = this.Invoke("InsertApplicantQualification", new object[] {
                        applicationNo,
                        areaOfStudy,
                        areaOfSpecialization,
                        award,
                        course,
                        grade,
                        institution,
                        dateFrom,
                        dateTo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertApplicantQualificationAsync(string applicationNo, string areaOfStudy, string areaOfSpecialization, string award, string course, string grade, string institution, System.DateTime dateFrom, System.DateTime dateTo) {
            this.InsertApplicantQualificationAsync(applicationNo, areaOfStudy, areaOfSpecialization, award, course, grade, institution, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void InsertApplicantQualificationAsync(string applicationNo, string areaOfStudy, string areaOfSpecialization, string award, string course, string grade, string institution, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.InsertApplicantQualificationOperationCompleted == null)) {
                this.InsertApplicantQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertApplicantQualificationOperationCompleted);
            }
            this.InvokeAsync("InsertApplicantQualification", new object[] {
                        applicationNo,
                        areaOfStudy,
                        areaOfSpecialization,
                        award,
                        course,
                        grade,
                        institution,
                        dateFrom,
                        dateTo}, this.InsertApplicantQualificationOperationCompleted, userState);
        }
        
        private void OnInsertApplicantQualificationOperationCompleted(object arg) {
            if ((this.InsertApplicantQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertApplicantQualificationCompleted(this, new InsertApplicantQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:InsertApplicantReferees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="InsertApplicantReferees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertApplicantReferees(string applicationNo, string names, string designation, string institution, string address, string phone, string email, string postCode, string city, string period) {
            object[] results = this.Invoke("InsertApplicantReferees", new object[] {
                        applicationNo,
                        names,
                        designation,
                        institution,
                        address,
                        phone,
                        email,
                        postCode,
                        city,
                        period});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertApplicantRefereesAsync(string applicationNo, string names, string designation, string institution, string address, string phone, string email, string postCode, string city, string period) {
            this.InsertApplicantRefereesAsync(applicationNo, names, designation, institution, address, phone, email, postCode, city, period, null);
        }
        
        /// <remarks/>
        public void InsertApplicantRefereesAsync(string applicationNo, string names, string designation, string institution, string address, string phone, string email, string postCode, string city, string period, object userState) {
            if ((this.InsertApplicantRefereesOperationCompleted == null)) {
                this.InsertApplicantRefereesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertApplicantRefereesOperationCompleted);
            }
            this.InvokeAsync("InsertApplicantReferees", new object[] {
                        applicationNo,
                        names,
                        designation,
                        institution,
                        address,
                        phone,
                        email,
                        postCode,
                        city,
                        period}, this.InsertApplicantRefereesOperationCompleted, userState);
        }
        
        private void OnInsertApplicantRefereesOperationCompleted(object arg) {
            if ((this.InsertApplicantRefereesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertApplicantRefereesCompleted(this, new InsertApplicantRefereesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:InsertEmploymentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="InsertEmploymentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertEmploymentDetails(string applicationNo, string designation, string jobGrade, string organization, decimal salary, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo) {
            object[] results = this.Invoke("InsertEmploymentDetails", new object[] {
                        applicationNo,
                        designation,
                        jobGrade,
                        organization,
                        salary,
                        dateFrom,
                        dateTo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmploymentDetailsAsync(string applicationNo, string designation, string jobGrade, string organization, decimal salary, System.DateTime dateFrom, System.DateTime dateTo) {
            this.InsertEmploymentDetailsAsync(applicationNo, designation, jobGrade, organization, salary, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void InsertEmploymentDetailsAsync(string applicationNo, string designation, string jobGrade, string organization, decimal salary, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.InsertEmploymentDetailsOperationCompleted == null)) {
                this.InsertEmploymentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmploymentDetailsOperationCompleted);
            }
            this.InvokeAsync("InsertEmploymentDetails", new object[] {
                        applicationNo,
                        designation,
                        jobGrade,
                        organization,
                        salary,
                        dateFrom,
                        dateTo}, this.InsertEmploymentDetailsOperationCompleted, userState);
        }
        
        private void OnInsertEmploymentDetailsOperationCompleted(object arg) {
            if ((this.InsertEmploymentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmploymentDetailsCompleted(this, new InsertEmploymentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:InsertNextOfKin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="InsertNextOfKin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertNextOfKin(string applicationNo, string name, string address, string telNo, string relationship) {
            object[] results = this.Invoke("InsertNextOfKin", new object[] {
                        applicationNo,
                        name,
                        address,
                        telNo,
                        relationship});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNextOfKinAsync(string applicationNo, string name, string address, string telNo, string relationship) {
            this.InsertNextOfKinAsync(applicationNo, name, address, telNo, relationship, null);
        }
        
        /// <remarks/>
        public void InsertNextOfKinAsync(string applicationNo, string name, string address, string telNo, string relationship, object userState) {
            if ((this.InsertNextOfKinOperationCompleted == null)) {
                this.InsertNextOfKinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNextOfKinOperationCompleted);
            }
            this.InvokeAsync("InsertNextOfKin", new object[] {
                        applicationNo,
                        name,
                        address,
                        telNo,
                        relationship}, this.InsertNextOfKinOperationCompleted, userState);
        }
        
        private void OnInsertNextOfKinOperationCompleted(object arg) {
            if ((this.InsertNextOfKinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNextOfKinCompleted(this, new InsertNextOfKinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:InsertProfessionalBodies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="InsertProfessionalBodies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertProfessionalBodies(string applicationNo, string professionalBody, string membershipNo, string membershipType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime renewalDate) {
            object[] results = this.Invoke("InsertProfessionalBodies", new object[] {
                        applicationNo,
                        professionalBody,
                        membershipNo,
                        membershipType,
                        renewalDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertProfessionalBodiesAsync(string applicationNo, string professionalBody, string membershipNo, string membershipType, System.DateTime renewalDate) {
            this.InsertProfessionalBodiesAsync(applicationNo, professionalBody, membershipNo, membershipType, renewalDate, null);
        }
        
        /// <remarks/>
        public void InsertProfessionalBodiesAsync(string applicationNo, string professionalBody, string membershipNo, string membershipType, System.DateTime renewalDate, object userState) {
            if ((this.InsertProfessionalBodiesOperationCompleted == null)) {
                this.InsertProfessionalBodiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProfessionalBodiesOperationCompleted);
            }
            this.InvokeAsync("InsertProfessionalBodies", new object[] {
                        applicationNo,
                        professionalBody,
                        membershipNo,
                        membershipType,
                        renewalDate}, this.InsertProfessionalBodiesOperationCompleted, userState);
        }
        
        private void OnInsertProfessionalBodiesOperationCompleted(object arg) {
            if ((this.InsertProfessionalBodiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProfessionalBodiesCompleted(this, new InsertProfessionalBodiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:InsertProfessionalQualificati" +
            "ons", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="InsertProfessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertProfessionalQualifications(string applicationNo, string institution, string attainment, string subject, string grade, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo) {
            object[] results = this.Invoke("InsertProfessionalQualifications", new object[] {
                        applicationNo,
                        institution,
                        attainment,
                        subject,
                        grade,
                        dateFrom,
                        dateTo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertProfessionalQualificationsAsync(string applicationNo, string institution, string attainment, string subject, string grade, System.DateTime dateFrom, System.DateTime dateTo) {
            this.InsertProfessionalQualificationsAsync(applicationNo, institution, attainment, subject, grade, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void InsertProfessionalQualificationsAsync(string applicationNo, string institution, string attainment, string subject, string grade, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.InsertProfessionalQualificationsOperationCompleted == null)) {
                this.InsertProfessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProfessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("InsertProfessionalQualifications", new object[] {
                        applicationNo,
                        institution,
                        attainment,
                        subject,
                        grade,
                        dateFrom,
                        dateTo}, this.InsertProfessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnInsertProfessionalQualificationsOperationCompleted(object arg) {
            if ((this.InsertProfessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProfessionalQualificationsCompleted(this, new InsertProfessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:InsertTrainingAttended", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="InsertTrainingAttended_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertTrainingAttended(string applicationNo, string institution, string name, string details, int year) {
            object[] results = this.Invoke("InsertTrainingAttended", new object[] {
                        applicationNo,
                        institution,
                        name,
                        details,
                        year});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTrainingAttendedAsync(string applicationNo, string institution, string name, string details, int year) {
            this.InsertTrainingAttendedAsync(applicationNo, institution, name, details, year, null);
        }
        
        /// <remarks/>
        public void InsertTrainingAttendedAsync(string applicationNo, string institution, string name, string details, int year, object userState) {
            if ((this.InsertTrainingAttendedOperationCompleted == null)) {
                this.InsertTrainingAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTrainingAttendedOperationCompleted);
            }
            this.InvokeAsync("InsertTrainingAttended", new object[] {
                        applicationNo,
                        institution,
                        name,
                        details,
                        year}, this.InsertTrainingAttendedOperationCompleted, userState);
        }
        
        private void OnInsertTrainingAttendedOperationCompleted(object arg) {
            if ((this.InsertTrainingAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTrainingAttendedCompleted(this, new InsertTrainingAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:JobRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="JobRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string JobRequirements(string jobId) {
            object[] results = this.Invoke("JobRequirements", new object[] {
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void JobRequirementsAsync(string jobId) {
            this.JobRequirementsAsync(jobId, null);
        }
        
        /// <remarks/>
        public void JobRequirementsAsync(string jobId, object userState) {
            if ((this.JobRequirementsOperationCompleted == null)) {
                this.JobRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobRequirementsOperationCompleted);
            }
            this.InvokeAsync("JobRequirements", new object[] {
                        jobId}, this.JobRequirementsOperationCompleted, userState);
        }
        
        private void OnJobRequirementsOperationCompleted(object arg) {
            if ((this.JobRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobRequirementsCompleted(this, new JobRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:JobResponsibilities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="JobResponsibilities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string JobResponsibilities(string jobId) {
            object[] results = this.Invoke("JobResponsibilities", new object[] {
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void JobResponsibilitiesAsync(string jobId) {
            this.JobResponsibilitiesAsync(jobId, null);
        }
        
        /// <remarks/>
        public void JobResponsibilitiesAsync(string jobId, object userState) {
            if ((this.JobResponsibilitiesOperationCompleted == null)) {
                this.JobResponsibilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobResponsibilitiesOperationCompleted);
            }
            this.InvokeAsync("JobResponsibilities", new object[] {
                        jobId}, this.JobResponsibilitiesOperationCompleted, userState);
        }
        
        private void OnJobResponsibilitiesOperationCompleted(object arg) {
            if ((this.JobResponsibilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobResponsibilitiesCompleted(this, new JobResponsibilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RecruitmentUserLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RecruitmentUserLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RecruitmentUserLogin(string idNumber, string password) {
            object[] results = this.Invoke("RecruitmentUserLogin", new object[] {
                        idNumber,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecruitmentUserLoginAsync(string idNumber, string password) {
            this.RecruitmentUserLoginAsync(idNumber, password, null);
        }
        
        /// <remarks/>
        public void RecruitmentUserLoginAsync(string idNumber, string password, object userState) {
            if ((this.RecruitmentUserLoginOperationCompleted == null)) {
                this.RecruitmentUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecruitmentUserLoginOperationCompleted);
            }
            this.InvokeAsync("RecruitmentUserLogin", new object[] {
                        idNumber,
                        password}, this.RecruitmentUserLoginOperationCompleted, userState);
        }
        
        private void OnRecruitmentUserLoginOperationCompleted(object arg) {
            if ((this.RecruitmentUserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecruitmentUserLoginCompleted(this, new RecruitmentUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RegFileUpload", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RegFileUpload_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RegFileUpload(string retNo, string fileName, string attachment, int tableId) {
            object[] results = this.Invoke("RegFileUpload", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegFileUploadAsync(string retNo, string fileName, string attachment, int tableId) {
            this.RegFileUploadAsync(retNo, fileName, attachment, tableId, null);
        }
        
        /// <remarks/>
        public void RegFileUploadAsync(string retNo, string fileName, string attachment, int tableId, object userState) {
            if ((this.RegFileUploadOperationCompleted == null)) {
                this.RegFileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegFileUploadOperationCompleted);
            }
            this.InvokeAsync("RegFileUpload", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId}, this.RegFileUploadOperationCompleted, userState);
        }
        
        private void OnRegFileUploadOperationCompleted(object arg) {
            if ((this.RegFileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegFileUploadCompleted(this, new RegFileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RemoveApplicantQualifications" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RemoveApplicantQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RemoveApplicantQualifications(string systemId) {
            object[] results = this.Invoke("RemoveApplicantQualifications", new object[] {
                        systemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveApplicantQualificationsAsync(string systemId) {
            this.RemoveApplicantQualificationsAsync(systemId, null);
        }
        
        /// <remarks/>
        public void RemoveApplicantQualificationsAsync(string systemId, object userState) {
            if ((this.RemoveApplicantQualificationsOperationCompleted == null)) {
                this.RemoveApplicantQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveApplicantQualificationsOperationCompleted);
            }
            this.InvokeAsync("RemoveApplicantQualifications", new object[] {
                        systemId}, this.RemoveApplicantQualificationsOperationCompleted, userState);
        }
        
        private void OnRemoveApplicantQualificationsOperationCompleted(object arg) {
            if ((this.RemoveApplicantQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveApplicantQualificationsCompleted(this, new RemoveApplicantQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RemoveApplicantReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RemoveApplicantReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RemoveApplicantReferee(string systemId) {
            object[] results = this.Invoke("RemoveApplicantReferee", new object[] {
                        systemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveApplicantRefereeAsync(string systemId) {
            this.RemoveApplicantRefereeAsync(systemId, null);
        }
        
        /// <remarks/>
        public void RemoveApplicantRefereeAsync(string systemId, object userState) {
            if ((this.RemoveApplicantRefereeOperationCompleted == null)) {
                this.RemoveApplicantRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveApplicantRefereeOperationCompleted);
            }
            this.InvokeAsync("RemoveApplicantReferee", new object[] {
                        systemId}, this.RemoveApplicantRefereeOperationCompleted, userState);
        }
        
        private void OnRemoveApplicantRefereeOperationCompleted(object arg) {
            if ((this.RemoveApplicantRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveApplicantRefereeCompleted(this, new RemoveApplicantRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RemoveEmploymentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RemoveEmploymentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RemoveEmploymentDetails(string systemId) {
            object[] results = this.Invoke("RemoveEmploymentDetails", new object[] {
                        systemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveEmploymentDetailsAsync(string systemId) {
            this.RemoveEmploymentDetailsAsync(systemId, null);
        }
        
        /// <remarks/>
        public void RemoveEmploymentDetailsAsync(string systemId, object userState) {
            if ((this.RemoveEmploymentDetailsOperationCompleted == null)) {
                this.RemoveEmploymentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveEmploymentDetailsOperationCompleted);
            }
            this.InvokeAsync("RemoveEmploymentDetails", new object[] {
                        systemId}, this.RemoveEmploymentDetailsOperationCompleted, userState);
        }
        
        private void OnRemoveEmploymentDetailsOperationCompleted(object arg) {
            if ((this.RemoveEmploymentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveEmploymentDetailsCompleted(this, new RemoveEmploymentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RemoveNextOfKin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RemoveNextOfKin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RemoveNextOfKin(string systemId) {
            object[] results = this.Invoke("RemoveNextOfKin", new object[] {
                        systemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveNextOfKinAsync(string systemId) {
            this.RemoveNextOfKinAsync(systemId, null);
        }
        
        /// <remarks/>
        public void RemoveNextOfKinAsync(string systemId, object userState) {
            if ((this.RemoveNextOfKinOperationCompleted == null)) {
                this.RemoveNextOfKinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNextOfKinOperationCompleted);
            }
            this.InvokeAsync("RemoveNextOfKin", new object[] {
                        systemId}, this.RemoveNextOfKinOperationCompleted, userState);
        }
        
        private void OnRemoveNextOfKinOperationCompleted(object arg) {
            if ((this.RemoveNextOfKinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNextOfKinCompleted(this, new RemoveNextOfKinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RemoveProfessionalBody", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RemoveProfessionalBody_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RemoveProfessionalBody(string systemId) {
            object[] results = this.Invoke("RemoveProfessionalBody", new object[] {
                        systemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveProfessionalBodyAsync(string systemId) {
            this.RemoveProfessionalBodyAsync(systemId, null);
        }
        
        /// <remarks/>
        public void RemoveProfessionalBodyAsync(string systemId, object userState) {
            if ((this.RemoveProfessionalBodyOperationCompleted == null)) {
                this.RemoveProfessionalBodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveProfessionalBodyOperationCompleted);
            }
            this.InvokeAsync("RemoveProfessionalBody", new object[] {
                        systemId}, this.RemoveProfessionalBodyOperationCompleted, userState);
        }
        
        private void OnRemoveProfessionalBodyOperationCompleted(object arg) {
            if ((this.RemoveProfessionalBodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveProfessionalBodyCompleted(this, new RemoveProfessionalBodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RemoveProfessionalQualificati" +
            "ons", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RemoveProfessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RemoveProfessionalQualifications(string systemId) {
            object[] results = this.Invoke("RemoveProfessionalQualifications", new object[] {
                        systemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveProfessionalQualificationsAsync(string systemId) {
            this.RemoveProfessionalQualificationsAsync(systemId, null);
        }
        
        /// <remarks/>
        public void RemoveProfessionalQualificationsAsync(string systemId, object userState) {
            if ((this.RemoveProfessionalQualificationsOperationCompleted == null)) {
                this.RemoveProfessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveProfessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("RemoveProfessionalQualifications", new object[] {
                        systemId}, this.RemoveProfessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnRemoveProfessionalQualificationsOperationCompleted(object arg) {
            if ((this.RemoveProfessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveProfessionalQualificationsCompleted(this, new RemoveProfessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:RemoveTrainingAttended", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="RemoveTrainingAttended_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RemoveTrainingAttended(string systemId) {
            object[] results = this.Invoke("RemoveTrainingAttended", new object[] {
                        systemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTrainingAttendedAsync(string systemId) {
            this.RemoveTrainingAttendedAsync(systemId, null);
        }
        
        /// <remarks/>
        public void RemoveTrainingAttendedAsync(string systemId, object userState) {
            if ((this.RemoveTrainingAttendedOperationCompleted == null)) {
                this.RemoveTrainingAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTrainingAttendedOperationCompleted);
            }
            this.InvokeAsync("RemoveTrainingAttended", new object[] {
                        systemId}, this.RemoveTrainingAttendedOperationCompleted, userState);
        }
        
        private void OnRemoveTrainingAttendedOperationCompleted(object arg) {
            if ((this.RemoveTrainingAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTrainingAttendedCompleted(this, new RemoveTrainingAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:SubmitApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="SubmitApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitApplication(string applicationNo) {
            object[] results = this.Invoke("SubmitApplication", new object[] {
                        applicationNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitApplicationAsync(string applicationNo) {
            this.SubmitApplicationAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void SubmitApplicationAsync(string applicationNo, object userState) {
            if ((this.SubmitApplicationOperationCompleted == null)) {
                this.SubmitApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitApplication", new object[] {
                        applicationNo}, this.SubmitApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitApplicationOperationCompleted(object arg) {
            if ((this.SubmitApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitApplicationCompleted(this, new SubmitApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:SubmitJobApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="SubmitJobApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitJobApplication(string username, string jobId, string refNo) {
            object[] results = this.Invoke("SubmitJobApplication", new object[] {
                        username,
                        jobId,
                        refNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitJobApplicationAsync(string username, string jobId, string refNo) {
            this.SubmitJobApplicationAsync(username, jobId, refNo, null);
        }
        
        /// <remarks/>
        public void SubmitJobApplicationAsync(string username, string jobId, string refNo, object userState) {
            if ((this.SubmitJobApplicationOperationCompleted == null)) {
                this.SubmitJobApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitJobApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitJobApplication", new object[] {
                        username,
                        jobId,
                        refNo}, this.SubmitJobApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitJobApplicationOperationCompleted(object arg) {
            if ((this.SubmitJobApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitJobApplicationCompleted(this, new SubmitJobApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:UpdateEmployeeMinimuRequireme" +
            "nt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="UpdateEmployeeMinimuRequirement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateEmployeeMinimuRequirement(string applicationNo, string refNo, string jobId, int answer, string code, string description) {
            object[] results = this.Invoke("UpdateEmployeeMinimuRequirement", new object[] {
                        applicationNo,
                        refNo,
                        jobId,
                        answer,
                        code,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeeMinimuRequirementAsync(string applicationNo, string refNo, string jobId, int answer, string code, string description) {
            this.UpdateEmployeeMinimuRequirementAsync(applicationNo, refNo, jobId, answer, code, description, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeMinimuRequirementAsync(string applicationNo, string refNo, string jobId, int answer, string code, string description, object userState) {
            if ((this.UpdateEmployeeMinimuRequirementOperationCompleted == null)) {
                this.UpdateEmployeeMinimuRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeMinimuRequirementOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployeeMinimuRequirement", new object[] {
                        applicationNo,
                        refNo,
                        jobId,
                        answer,
                        code,
                        description}, this.UpdateEmployeeMinimuRequirementOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeMinimuRequirementOperationCompleted(object arg) {
            if ((this.UpdateEmployeeMinimuRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeMinimuRequirementCompleted(this, new UpdateEmployeeMinimuRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:UpdateUserPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="UpdateUserPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateUserPassword(string idNumber, string password) {
            object[] results = this.Invoke("UpdateUserPassword", new object[] {
                        idNumber,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(string idNumber, string password) {
            this.UpdateUserPasswordAsync(idNumber, password, null);
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(string idNumber, string password, object userState) {
            if ((this.UpdateUserPasswordOperationCompleted == null)) {
                this.UpdateUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPassword", new object[] {
                        idNumber,
                        password}, this.UpdateUserPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateUserPasswordOperationCompleted(object arg) {
            if ((this.UpdateUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPasswordCompleted(this, new UpdateUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/recruitment:UpdateUserProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", ResponseElementName="UpdateUserProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/recruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateUserProfile(
                    string idNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, 
                    string pinNo, 
                    int title, 
                    int gender, 
                    string nationality, 
                    string ethnicity, 
                    string homeCounty, 
                    string subCounty, 
                    string constituency, 
                    string postCode, 
                    string postAddress, 
                    string town, 
                    string telNo, 
                    string mobileNo, 
                    string emailaddress, 
                    string contactPersonName, 
                    string contactPersonTel, 
                    int disability, 
                    string natureOfDisability, 
                    string registrationNo, 
                    int maritalStatus, 
                    int ethnicOrigin) {
            object[] results = this.Invoke("UpdateUserProfile", new object[] {
                        idNumber,
                        dob,
                        pinNo,
                        title,
                        gender,
                        nationality,
                        ethnicity,
                        homeCounty,
                        subCounty,
                        constituency,
                        postCode,
                        postAddress,
                        town,
                        telNo,
                        mobileNo,
                        emailaddress,
                        contactPersonName,
                        contactPersonTel,
                        disability,
                        natureOfDisability,
                        registrationNo,
                        maritalStatus,
                        ethnicOrigin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserProfileAsync(
                    string idNumber, 
                    System.DateTime dob, 
                    string pinNo, 
                    int title, 
                    int gender, 
                    string nationality, 
                    string ethnicity, 
                    string homeCounty, 
                    string subCounty, 
                    string constituency, 
                    string postCode, 
                    string postAddress, 
                    string town, 
                    string telNo, 
                    string mobileNo, 
                    string emailaddress, 
                    string contactPersonName, 
                    string contactPersonTel, 
                    int disability, 
                    string natureOfDisability, 
                    string registrationNo, 
                    int maritalStatus, 
                    int ethnicOrigin) {
            this.UpdateUserProfileAsync(idNumber, dob, pinNo, title, gender, nationality, ethnicity, homeCounty, subCounty, constituency, postCode, postAddress, town, telNo, mobileNo, emailaddress, contactPersonName, contactPersonTel, disability, natureOfDisability, registrationNo, maritalStatus, ethnicOrigin, null);
        }
        
        /// <remarks/>
        public void UpdateUserProfileAsync(
                    string idNumber, 
                    System.DateTime dob, 
                    string pinNo, 
                    int title, 
                    int gender, 
                    string nationality, 
                    string ethnicity, 
                    string homeCounty, 
                    string subCounty, 
                    string constituency, 
                    string postCode, 
                    string postAddress, 
                    string town, 
                    string telNo, 
                    string mobileNo, 
                    string emailaddress, 
                    string contactPersonName, 
                    string contactPersonTel, 
                    int disability, 
                    string natureOfDisability, 
                    string registrationNo, 
                    int maritalStatus, 
                    int ethnicOrigin, 
                    object userState) {
            if ((this.UpdateUserProfileOperationCompleted == null)) {
                this.UpdateUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserProfileOperationCompleted);
            }
            this.InvokeAsync("UpdateUserProfile", new object[] {
                        idNumber,
                        dob,
                        pinNo,
                        title,
                        gender,
                        nationality,
                        ethnicity,
                        homeCounty,
                        subCounty,
                        constituency,
                        postCode,
                        postAddress,
                        town,
                        telNo,
                        mobileNo,
                        emailaddress,
                        contactPersonName,
                        contactPersonTel,
                        disability,
                        natureOfDisability,
                        registrationNo,
                        maritalStatus,
                        ethnicOrigin}, this.UpdateUserProfileOperationCompleted, userState);
        }
        
        private void OnUpdateUserProfileOperationCompleted(object arg) {
            if ((this.UpdateUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserProfileCompleted(this, new UpdateUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AccountExistsCompletedEventHandler(object sender, AccountExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseAllRequisitionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateOnlineAccountCompletedEventHandler(object sender, CreateOnlineAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOnlineAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOnlineAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteAttachmentCompletedEventHandler(object sender, DeleteAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAdvertisedJobsCompletedEventHandler(object sender, GetAdvertisedJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdvertisedJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdvertisedJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetApplicantAttachmentsCompletedEventHandler(object sender, GetApplicantAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicantAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicantAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetApplicantQualificationsCompletedEventHandler(object sender, GetApplicantQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicantQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicantQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetApplicantRefereesCompletedEventHandler(object sender, GetApplicantRefereesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicantRefereesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicantRefereesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAreaOfSpecializationCompletedEventHandler(object sender, GetAreaOfSpecializationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAreaOfSpecializationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAreaOfSpecializationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAreaOfStudyCompletedEventHandler(object sender, GetAreaOfStudyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAreaOfStudyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAreaOfStudyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAwardCompletedEventHandler(object sender, GetAwardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetConstituenciesCompletedEventHandler(object sender, GetConstituenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConstituenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConstituenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCountiesCompletedEventHandler(object sender, GetCountiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCourseCompletedEventHandler(object sender, GetCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEmploymentDetailsCompletedEventHandler(object sender, GetEmploymentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmploymentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmploymentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetGradesCompletedEventHandler(object sender, GetGradesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJobQualificationCodesCompletedEventHandler(object sender, GetJobQualificationCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobQualificationCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobQualificationCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJobQualificationTypeCompletedEventHandler(object sender, GetJobQualificationTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobQualificationTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobQualificationTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJobRequirementsCompletedEventHandler(object sender, GetJobRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJobResponsibilitiesCompletedEventHandler(object sender, GetJobResponsibilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobResponsibilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobResponsibilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetJobTitleCompletedEventHandler(object sender, GetJobTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMinimumRequirementsCompletedEventHandler(object sender, GetMinimumRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMinimumRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMinimumRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyApplicationsCompletedEventHandler(object sender, GetMyApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyCompleteApplicationsCompletedEventHandler(object sender, GetMyCompleteApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyCompleteApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyCompleteApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNationalitiesCompletedEventHandler(object sender, GetNationalitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNationalitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNationalitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNextOfKinCompletedEventHandler(object sender, GetNextOfKinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextOfKinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextOfKinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProfessionalBodiesCompletedEventHandler(object sender, GetProfessionalBodiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfessionalBodiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfessionalBodiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProfessionalQualificationsCompletedEventHandler(object sender, GetProfessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRelativesCompletedEventHandler(object sender, GetRelativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSubCountiesCompletedEventHandler(object sender, GetSubCountiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubCountiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubCountiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSubmittedMinimumRequirementsCompletedEventHandler(object sender, GetSubmittedMinimumRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubmittedMinimumRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubmittedMinimumRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTrainingsAttendedCompletedEventHandler(object sender, GetTrainingsAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingsAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingsAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTribesCompletedEventHandler(object sender, GetTribesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTribesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTribesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserDataCompletedEventHandler(object sender, GetUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HasInsertedMinimumRequirementCompletedEventHandler(object sender, HasInsertedMinimumRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasInsertedMinimumRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasInsertedMinimumRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HasUpdatedProfileCompletedEventHandler(object sender, HasUpdatedProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasUpdatedProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasUpdatedProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertApplicantQualificationCompletedEventHandler(object sender, InsertApplicantQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertApplicantQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertApplicantQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertApplicantRefereesCompletedEventHandler(object sender, InsertApplicantRefereesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertApplicantRefereesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertApplicantRefereesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertEmploymentDetailsCompletedEventHandler(object sender, InsertEmploymentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmploymentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmploymentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertNextOfKinCompletedEventHandler(object sender, InsertNextOfKinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNextOfKinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNextOfKinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertProfessionalBodiesCompletedEventHandler(object sender, InsertProfessionalBodiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProfessionalBodiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProfessionalBodiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertProfessionalQualificationsCompletedEventHandler(object sender, InsertProfessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProfessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProfessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTrainingAttendedCompletedEventHandler(object sender, InsertTrainingAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTrainingAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTrainingAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void JobRequirementsCompletedEventHandler(object sender, JobRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void JobResponsibilitiesCompletedEventHandler(object sender, JobResponsibilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobResponsibilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobResponsibilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RecruitmentUserLoginCompletedEventHandler(object sender, RecruitmentUserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecruitmentUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecruitmentUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RegFileUploadCompletedEventHandler(object sender, RegFileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegFileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegFileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RemoveApplicantQualificationsCompletedEventHandler(object sender, RemoveApplicantQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveApplicantQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveApplicantQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RemoveApplicantRefereeCompletedEventHandler(object sender, RemoveApplicantRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveApplicantRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveApplicantRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RemoveEmploymentDetailsCompletedEventHandler(object sender, RemoveEmploymentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveEmploymentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveEmploymentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RemoveNextOfKinCompletedEventHandler(object sender, RemoveNextOfKinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveNextOfKinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveNextOfKinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RemoveProfessionalBodyCompletedEventHandler(object sender, RemoveProfessionalBodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveProfessionalBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveProfessionalBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RemoveProfessionalQualificationsCompletedEventHandler(object sender, RemoveProfessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveProfessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveProfessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RemoveTrainingAttendedCompletedEventHandler(object sender, RemoveTrainingAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTrainingAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTrainingAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitApplicationCompletedEventHandler(object sender, SubmitApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitJobApplicationCompletedEventHandler(object sender, SubmitJobApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitJobApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitJobApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateEmployeeMinimuRequirementCompletedEventHandler(object sender, UpdateEmployeeMinimuRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeeMinimuRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeeMinimuRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateUserPasswordCompletedEventHandler(object sender, UpdateUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateUserProfileCompletedEventHandler(object sender, UpdateUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
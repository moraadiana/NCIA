//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NCIASupplier.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Supplier_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Supplier")]
    public partial class Supplier : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AccountActivatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateBidderAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddedCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeBidderPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBidderLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckExistingRFQOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBidderAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePrequalificationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePrequalificationLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTenderSubmissionHeader1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTenderSubmissionHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppliedPrequalificationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBidderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBidderNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentPrequalificationPeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastPrnNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBidLines1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBidLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBids1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenTenderLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenTenders2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenTendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrequalificationApplicationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrequalificationApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrequalificationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnappliedPrequalificationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTenderSubmissionLine1OperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTenderSubmissionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotAllMandatoryDocumentsAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrequalificationAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBid1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitPrequalificationApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback TenderAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidVATnoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateVATnoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Supplier() {
            this.Url = global::NCIASupplier.Properties.Settings.Default.NCIASupplier_NAVWS_Supplier;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AccountActivatedCompletedEventHandler AccountActivatedCompleted;
        
        /// <remarks/>
        public event ActivateBidderAccountCompletedEventHandler ActivateBidderAccountCompleted;
        
        /// <remarks/>
        public event AddedCategoryCompletedEventHandler AddedCategoryCompleted;
        
        /// <remarks/>
        public event ChangeBidderPasswordCompletedEventHandler ChangeBidderPasswordCompleted;
        
        /// <remarks/>
        public event CheckBidderLoginCompletedEventHandler CheckBidderLoginCompleted;
        
        /// <remarks/>
        public event CheckExistingRFQCompletedEventHandler CheckExistingRFQCompleted;
        
        /// <remarks/>
        public event CreateBidderAccountCompletedEventHandler CreateBidderAccountCompleted;
        
        /// <remarks/>
        public event CreatePrequalificationHeaderCompletedEventHandler CreatePrequalificationHeaderCompleted;
        
        /// <remarks/>
        public event CreatePrequalificationLineCompletedEventHandler CreatePrequalificationLineCompleted;
        
        /// <remarks/>
        public event CreateTenderSubmissionHeader1CompletedEventHandler CreateTenderSubmissionHeader1Completed;
        
        /// <remarks/>
        public event CreateTenderSubmissionHeaderCompletedEventHandler CreateTenderSubmissionHeaderCompleted;
        
        /// <remarks/>
        public event DocumentAttachmentCompletedEventHandler DocumentAttachmentCompleted;
        
        /// <remarks/>
        public event FileAttachedCompletedEventHandler FileAttachedCompleted;
        
        /// <remarks/>
        public event GetAppliedPrequalificationCategoriesCompletedEventHandler GetAppliedPrequalificationCategoriesCompleted;
        
        /// <remarks/>
        public event GetBidderDetailsCompletedEventHandler GetBidderDetailsCompleted;
        
        /// <remarks/>
        public event GetBidderNameCompletedEventHandler GetBidderNameCompleted;
        
        /// <remarks/>
        public event GetCategoryNameCompletedEventHandler GetCategoryNameCompleted;
        
        /// <remarks/>
        public event GetCategoryRequirementsCompletedEventHandler GetCategoryRequirementsCompleted;
        
        /// <remarks/>
        public event GetCurrentPrequalificationPeriodCompletedEventHandler GetCurrentPrequalificationPeriodCompleted;
        
        /// <remarks/>
        public event GetLastPrnNoCompletedEventHandler GetLastPrnNoCompleted;
        
        /// <remarks/>
        public event GetMyBidLines1CompletedEventHandler GetMyBidLines1Completed;
        
        /// <remarks/>
        public event GetMyBidLinesCompletedEventHandler GetMyBidLinesCompleted;
        
        /// <remarks/>
        public event GetMyBids1CompletedEventHandler GetMyBids1Completed;
        
        /// <remarks/>
        public event GetMyBidsCompletedEventHandler GetMyBidsCompleted;
        
        /// <remarks/>
        public event GetOpenTenderLinesCompletedEventHandler GetOpenTenderLinesCompleted;
        
        /// <remarks/>
        public event GetOpenTenders2CompletedEventHandler GetOpenTenders2Completed;
        
        /// <remarks/>
        public event GetOpenTendersCompletedEventHandler GetOpenTendersCompleted;
        
        /// <remarks/>
        public event GetPrequalificationApplicationCategoriesCompletedEventHandler GetPrequalificationApplicationCategoriesCompleted;
        
        /// <remarks/>
        public event GetPrequalificationApplicationsCompletedEventHandler GetPrequalificationApplicationsCompleted;
        
        /// <remarks/>
        public event GetPrequalificationCategoriesCompletedEventHandler GetPrequalificationCategoriesCompleted;
        
        /// <remarks/>
        public event GetUnappliedPrequalificationCategoriesCompletedEventHandler GetUnappliedPrequalificationCategoriesCompleted;
        
        /// <remarks/>
        public event InsertTenderSubmissionLine1CompletedEventHandler InsertTenderSubmissionLine1Completed;
        
        /// <remarks/>
        public event InsertTenderSubmissionLineCompletedEventHandler InsertTenderSubmissionLineCompleted;
        
        /// <remarks/>
        public event NotAllMandatoryDocumentsAttachedCompletedEventHandler NotAllMandatoryDocumentsAttachedCompleted;
        
        /// <remarks/>
        public event PrequalificationAppliedCompletedEventHandler PrequalificationAppliedCompleted;
        
        /// <remarks/>
        public event SubmitBid1CompletedEventHandler SubmitBid1Completed;
        
        /// <remarks/>
        public event SubmitBidCompletedEventHandler SubmitBidCompleted;
        
        /// <remarks/>
        public event SubmitPrequalificationApplicationCompletedEventHandler SubmitPrequalificationApplicationCompleted;
        
        /// <remarks/>
        public event TenderAppliedCompletedEventHandler TenderAppliedCompleted;
        
        /// <remarks/>
        public event ValidEmailAddressCompletedEventHandler ValidEmailAddressCompleted;
        
        /// <remarks/>
        public event ValidVATnoCompletedEventHandler ValidVATnoCompleted;
        
        /// <remarks/>
        public event ValidateEmailCompletedEventHandler ValidateEmailCompleted;
        
        /// <remarks/>
        public event ValidateVATnoCompletedEventHandler ValidateVATnoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:AccountActivated", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="AccountActivated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AccountActivated(string email) {
            object[] results = this.Invoke("AccountActivated", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AccountActivatedAsync(string email) {
            this.AccountActivatedAsync(email, null);
        }
        
        /// <remarks/>
        public void AccountActivatedAsync(string email, object userState) {
            if ((this.AccountActivatedOperationCompleted == null)) {
                this.AccountActivatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountActivatedOperationCompleted);
            }
            this.InvokeAsync("AccountActivated", new object[] {
                        email}, this.AccountActivatedOperationCompleted, userState);
        }
        
        private void OnAccountActivatedOperationCompleted(object arg) {
            if ((this.AccountActivatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountActivatedCompleted(this, new AccountActivatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:ActivateBidderAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="ActivateBidderAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ActivateBidderAccount(string kraPin, string activationCode) {
            object[] results = this.Invoke("ActivateBidderAccount", new object[] {
                        kraPin,
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateBidderAccountAsync(string kraPin, string activationCode) {
            this.ActivateBidderAccountAsync(kraPin, activationCode, null);
        }
        
        /// <remarks/>
        public void ActivateBidderAccountAsync(string kraPin, string activationCode, object userState) {
            if ((this.ActivateBidderAccountOperationCompleted == null)) {
                this.ActivateBidderAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateBidderAccountOperationCompleted);
            }
            this.InvokeAsync("ActivateBidderAccount", new object[] {
                        kraPin,
                        activationCode}, this.ActivateBidderAccountOperationCompleted, userState);
        }
        
        private void OnActivateBidderAccountOperationCompleted(object arg) {
            if ((this.ActivateBidderAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateBidderAccountCompleted(this, new ActivateBidderAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:AddedCategory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="AddedCategory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddedCategory(string bidderVat) {
            object[] results = this.Invoke("AddedCategory", new object[] {
                        bidderVat});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddedCategoryAsync(string bidderVat) {
            this.AddedCategoryAsync(bidderVat, null);
        }
        
        /// <remarks/>
        public void AddedCategoryAsync(string bidderVat, object userState) {
            if ((this.AddedCategoryOperationCompleted == null)) {
                this.AddedCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddedCategoryOperationCompleted);
            }
            this.InvokeAsync("AddedCategory", new object[] {
                        bidderVat}, this.AddedCategoryOperationCompleted, userState);
        }
        
        private void OnAddedCategoryOperationCompleted(object arg) {
            if ((this.AddedCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddedCategoryCompleted(this, new AddedCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:ChangeBidderPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="ChangeBidderPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangeBidderPassword(string email, string genpass) {
            object[] results = this.Invoke("ChangeBidderPassword", new object[] {
                        email,
                        genpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeBidderPasswordAsync(string email, string genpass) {
            this.ChangeBidderPasswordAsync(email, genpass, null);
        }
        
        /// <remarks/>
        public void ChangeBidderPasswordAsync(string email, string genpass, object userState) {
            if ((this.ChangeBidderPasswordOperationCompleted == null)) {
                this.ChangeBidderPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeBidderPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeBidderPassword", new object[] {
                        email,
                        genpass}, this.ChangeBidderPasswordOperationCompleted, userState);
        }
        
        private void OnChangeBidderPasswordOperationCompleted(object arg) {
            if ((this.ChangeBidderPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeBidderPasswordCompleted(this, new ChangeBidderPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:CheckBidderLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="CheckBidderLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckBidderLogin(string vATno, string password) {
            object[] results = this.Invoke("CheckBidderLogin", new object[] {
                        vATno,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBidderLoginAsync(string vATno, string password) {
            this.CheckBidderLoginAsync(vATno, password, null);
        }
        
        /// <remarks/>
        public void CheckBidderLoginAsync(string vATno, string password, object userState) {
            if ((this.CheckBidderLoginOperationCompleted == null)) {
                this.CheckBidderLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBidderLoginOperationCompleted);
            }
            this.InvokeAsync("CheckBidderLogin", new object[] {
                        vATno,
                        password}, this.CheckBidderLoginOperationCompleted, userState);
        }
        
        private void OnCheckBidderLoginOperationCompleted(object arg) {
            if ((this.CheckBidderLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBidderLoginCompleted(this, new CheckBidderLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:CheckExistingRFQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="CheckExistingRFQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckExistingRFQ(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("CheckExistingRFQ", new object[] {
                        bidderNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckExistingRFQAsync(string bidderNo, string tenderNo) {
            this.CheckExistingRFQAsync(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void CheckExistingRFQAsync(string bidderNo, string tenderNo, object userState) {
            if ((this.CheckExistingRFQOperationCompleted == null)) {
                this.CheckExistingRFQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckExistingRFQOperationCompleted);
            }
            this.InvokeAsync("CheckExistingRFQ", new object[] {
                        bidderNo,
                        tenderNo}, this.CheckExistingRFQOperationCompleted, userState);
        }
        
        private void OnCheckExistingRFQOperationCompleted(object arg) {
            if ((this.CheckExistingRFQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckExistingRFQCompleted(this, new CheckExistingRFQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:CreateBidderAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="CreateBidderAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateBidderAccount(string kraPin, string companyName, string postalAddress, string companyContact, string companyEmail, string contactPerson, string contactPersonPhone, string contactPersonEmail, string activationCode, string password) {
            object[] results = this.Invoke("CreateBidderAccount", new object[] {
                        kraPin,
                        companyName,
                        postalAddress,
                        companyContact,
                        companyEmail,
                        contactPerson,
                        contactPersonPhone,
                        contactPersonEmail,
                        activationCode,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBidderAccountAsync(string kraPin, string companyName, string postalAddress, string companyContact, string companyEmail, string contactPerson, string contactPersonPhone, string contactPersonEmail, string activationCode, string password) {
            this.CreateBidderAccountAsync(kraPin, companyName, postalAddress, companyContact, companyEmail, contactPerson, contactPersonPhone, contactPersonEmail, activationCode, password, null);
        }
        
        /// <remarks/>
        public void CreateBidderAccountAsync(string kraPin, string companyName, string postalAddress, string companyContact, string companyEmail, string contactPerson, string contactPersonPhone, string contactPersonEmail, string activationCode, string password, object userState) {
            if ((this.CreateBidderAccountOperationCompleted == null)) {
                this.CreateBidderAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBidderAccountOperationCompleted);
            }
            this.InvokeAsync("CreateBidderAccount", new object[] {
                        kraPin,
                        companyName,
                        postalAddress,
                        companyContact,
                        companyEmail,
                        contactPerson,
                        contactPersonPhone,
                        contactPersonEmail,
                        activationCode,
                        password}, this.CreateBidderAccountOperationCompleted, userState);
        }
        
        private void OnCreateBidderAccountOperationCompleted(object arg) {
            if ((this.CreateBidderAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBidderAccountCompleted(this, new CreateBidderAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:CreatePrequalificationHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="CreatePrequalificationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreatePrequalificationHeader(string bidderNo) {
            object[] results = this.Invoke("CreatePrequalificationHeader", new object[] {
                        bidderNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePrequalificationHeaderAsync(string bidderNo) {
            this.CreatePrequalificationHeaderAsync(bidderNo, null);
        }
        
        /// <remarks/>
        public void CreatePrequalificationHeaderAsync(string bidderNo, object userState) {
            if ((this.CreatePrequalificationHeaderOperationCompleted == null)) {
                this.CreatePrequalificationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePrequalificationHeaderOperationCompleted);
            }
            this.InvokeAsync("CreatePrequalificationHeader", new object[] {
                        bidderNo}, this.CreatePrequalificationHeaderOperationCompleted, userState);
        }
        
        private void OnCreatePrequalificationHeaderOperationCompleted(object arg) {
            if ((this.CreatePrequalificationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePrequalificationHeaderCompleted(this, new CreatePrequalificationHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:CreatePrequalificationLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="CreatePrequalificationLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreatePrequalificationLine(string email, string kraPin, string category) {
            object[] results = this.Invoke("CreatePrequalificationLine", new object[] {
                        email,
                        kraPin,
                        category});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePrequalificationLineAsync(string email, string kraPin, string category) {
            this.CreatePrequalificationLineAsync(email, kraPin, category, null);
        }
        
        /// <remarks/>
        public void CreatePrequalificationLineAsync(string email, string kraPin, string category, object userState) {
            if ((this.CreatePrequalificationLineOperationCompleted == null)) {
                this.CreatePrequalificationLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePrequalificationLineOperationCompleted);
            }
            this.InvokeAsync("CreatePrequalificationLine", new object[] {
                        email,
                        kraPin,
                        category}, this.CreatePrequalificationLineOperationCompleted, userState);
        }
        
        private void OnCreatePrequalificationLineOperationCompleted(object arg) {
            if ((this.CreatePrequalificationLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePrequalificationLineCompleted(this, new CreatePrequalificationLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:CreateTenderSubmissionHeader1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="CreateTenderSubmissionHeader1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTenderSubmissionHeader1(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("CreateTenderSubmissionHeader1", new object[] {
                        bidderNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTenderSubmissionHeader1Async(string bidderNo, string tenderNo) {
            this.CreateTenderSubmissionHeader1Async(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void CreateTenderSubmissionHeader1Async(string bidderNo, string tenderNo, object userState) {
            if ((this.CreateTenderSubmissionHeader1OperationCompleted == null)) {
                this.CreateTenderSubmissionHeader1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTenderSubmissionHeader1OperationCompleted);
            }
            this.InvokeAsync("CreateTenderSubmissionHeader1", new object[] {
                        bidderNo,
                        tenderNo}, this.CreateTenderSubmissionHeader1OperationCompleted, userState);
        }
        
        private void OnCreateTenderSubmissionHeader1OperationCompleted(object arg) {
            if ((this.CreateTenderSubmissionHeader1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTenderSubmissionHeader1Completed(this, new CreateTenderSubmissionHeader1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:CreateTenderSubmissionHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="CreateTenderSubmissionHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTenderSubmissionHeader(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("CreateTenderSubmissionHeader", new object[] {
                        bidderNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTenderSubmissionHeaderAsync(string bidderNo, string tenderNo) {
            this.CreateTenderSubmissionHeaderAsync(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void CreateTenderSubmissionHeaderAsync(string bidderNo, string tenderNo, object userState) {
            if ((this.CreateTenderSubmissionHeaderOperationCompleted == null)) {
                this.CreateTenderSubmissionHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTenderSubmissionHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateTenderSubmissionHeader", new object[] {
                        bidderNo,
                        tenderNo}, this.CreateTenderSubmissionHeaderOperationCompleted, userState);
        }
        
        private void OnCreateTenderSubmissionHeaderOperationCompleted(object arg) {
            if ((this.CreateTenderSubmissionHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTenderSubmissionHeaderCompleted(this, new CreateTenderSubmissionHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:DocumentAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="DocumentAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DocumentAttachment(string retNo, string fileName, string attachment, int tableId) {
            object[] results = this.Invoke("DocumentAttachment", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentAttachmentAsync(string retNo, string fileName, string attachment, int tableId) {
            this.DocumentAttachmentAsync(retNo, fileName, attachment, tableId, null);
        }
        
        /// <remarks/>
        public void DocumentAttachmentAsync(string retNo, string fileName, string attachment, int tableId, object userState) {
            if ((this.DocumentAttachmentOperationCompleted == null)) {
                this.DocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("DocumentAttachment", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId}, this.DocumentAttachmentOperationCompleted, userState);
        }
        
        private void OnDocumentAttachmentOperationCompleted(object arg) {
            if ((this.DocumentAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentAttachmentCompleted(this, new DocumentAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:FileAttached", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="FileAttached_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FileAttached(string bidderVat, string description) {
            object[] results = this.Invoke("FileAttached", new object[] {
                        bidderVat,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileAttachedAsync(string bidderVat, string description) {
            this.FileAttachedAsync(bidderVat, description, null);
        }
        
        /// <remarks/>
        public void FileAttachedAsync(string bidderVat, string description, object userState) {
            if ((this.FileAttachedOperationCompleted == null)) {
                this.FileAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileAttachedOperationCompleted);
            }
            this.InvokeAsync("FileAttached", new object[] {
                        bidderVat,
                        description}, this.FileAttachedOperationCompleted, userState);
        }
        
        private void OnFileAttachedOperationCompleted(object arg) {
            if ((this.FileAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileAttachedCompleted(this, new FileAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetAppliedPrequalificationCatego" +
            "ries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetAppliedPrequalificationCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAppliedPrequalificationCategories(string kraPin) {
            object[] results = this.Invoke("GetAppliedPrequalificationCategories", new object[] {
                        kraPin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppliedPrequalificationCategoriesAsync(string kraPin) {
            this.GetAppliedPrequalificationCategoriesAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void GetAppliedPrequalificationCategoriesAsync(string kraPin, object userState) {
            if ((this.GetAppliedPrequalificationCategoriesOperationCompleted == null)) {
                this.GetAppliedPrequalificationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppliedPrequalificationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAppliedPrequalificationCategories", new object[] {
                        kraPin}, this.GetAppliedPrequalificationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAppliedPrequalificationCategoriesOperationCompleted(object arg) {
            if ((this.GetAppliedPrequalificationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppliedPrequalificationCategoriesCompleted(this, new GetAppliedPrequalificationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetBidderDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetBidderDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBidderDetails(string bidderNo) {
            object[] results = this.Invoke("GetBidderDetails", new object[] {
                        bidderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBidderDetailsAsync(string bidderNo) {
            this.GetBidderDetailsAsync(bidderNo, null);
        }
        
        /// <remarks/>
        public void GetBidderDetailsAsync(string bidderNo, object userState) {
            if ((this.GetBidderDetailsOperationCompleted == null)) {
                this.GetBidderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBidderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBidderDetails", new object[] {
                        bidderNo}, this.GetBidderDetailsOperationCompleted, userState);
        }
        
        private void OnGetBidderDetailsOperationCompleted(object arg) {
            if ((this.GetBidderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBidderDetailsCompleted(this, new GetBidderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetBidderName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetBidderName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBidderName(string bidderNo) {
            object[] results = this.Invoke("GetBidderName", new object[] {
                        bidderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBidderNameAsync(string bidderNo) {
            this.GetBidderNameAsync(bidderNo, null);
        }
        
        /// <remarks/>
        public void GetBidderNameAsync(string bidderNo, object userState) {
            if ((this.GetBidderNameOperationCompleted == null)) {
                this.GetBidderNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBidderNameOperationCompleted);
            }
            this.InvokeAsync("GetBidderName", new object[] {
                        bidderNo}, this.GetBidderNameOperationCompleted, userState);
        }
        
        private void OnGetBidderNameOperationCompleted(object arg) {
            if ((this.GetBidderNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBidderNameCompleted(this, new GetBidderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetCategoryName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetCategoryName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCategoryName(string categoryCode) {
            object[] results = this.Invoke("GetCategoryName", new object[] {
                        categoryCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(string categoryCode) {
            this.GetCategoryNameAsync(categoryCode, null);
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(string categoryCode, object userState) {
            if ((this.GetCategoryNameOperationCompleted == null)) {
                this.GetCategoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryNameOperationCompleted);
            }
            this.InvokeAsync("GetCategoryName", new object[] {
                        categoryCode}, this.GetCategoryNameOperationCompleted, userState);
        }
        
        private void OnGetCategoryNameOperationCompleted(object arg) {
            if ((this.GetCategoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryNameCompleted(this, new GetCategoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetCategoryRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetCategoryRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCategoryRequirements(string category, string bidderVat) {
            object[] results = this.Invoke("GetCategoryRequirements", new object[] {
                        category,
                        bidderVat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryRequirementsAsync(string category, string bidderVat) {
            this.GetCategoryRequirementsAsync(category, bidderVat, null);
        }
        
        /// <remarks/>
        public void GetCategoryRequirementsAsync(string category, string bidderVat, object userState) {
            if ((this.GetCategoryRequirementsOperationCompleted == null)) {
                this.GetCategoryRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryRequirementsOperationCompleted);
            }
            this.InvokeAsync("GetCategoryRequirements", new object[] {
                        category,
                        bidderVat}, this.GetCategoryRequirementsOperationCompleted, userState);
        }
        
        private void OnGetCategoryRequirementsOperationCompleted(object arg) {
            if ((this.GetCategoryRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryRequirementsCompleted(this, new GetCategoryRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetCurrentPrequalificationPeriod" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetCurrentPrequalificationPeriod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentPrequalificationPeriod() {
            object[] results = this.Invoke("GetCurrentPrequalificationPeriod", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentPrequalificationPeriodAsync() {
            this.GetCurrentPrequalificationPeriodAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentPrequalificationPeriodAsync(object userState) {
            if ((this.GetCurrentPrequalificationPeriodOperationCompleted == null)) {
                this.GetCurrentPrequalificationPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentPrequalificationPeriodOperationCompleted);
            }
            this.InvokeAsync("GetCurrentPrequalificationPeriod", new object[0], this.GetCurrentPrequalificationPeriodOperationCompleted, userState);
        }
        
        private void OnGetCurrentPrequalificationPeriodOperationCompleted(object arg) {
            if ((this.GetCurrentPrequalificationPeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentPrequalificationPeriodCompleted(this, new GetCurrentPrequalificationPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetLastPrnNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetLastPrnNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GetLastPrnNo() {
            object[] results = this.Invoke("GetLastPrnNo", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastPrnNoAsync() {
            this.GetLastPrnNoAsync(null);
        }
        
        /// <remarks/>
        public void GetLastPrnNoAsync(object userState) {
            if ((this.GetLastPrnNoOperationCompleted == null)) {
                this.GetLastPrnNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastPrnNoOperationCompleted);
            }
            this.InvokeAsync("GetLastPrnNo", new object[0], this.GetLastPrnNoOperationCompleted, userState);
        }
        
        private void OnGetLastPrnNoOperationCompleted(object arg) {
            if ((this.GetLastPrnNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastPrnNoCompleted(this, new GetLastPrnNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetMyBidLines1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetMyBidLines1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyBidLines1(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("GetMyBidLines1", new object[] {
                        bidderNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBidLines1Async(string bidderNo, string tenderNo) {
            this.GetMyBidLines1Async(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void GetMyBidLines1Async(string bidderNo, string tenderNo, object userState) {
            if ((this.GetMyBidLines1OperationCompleted == null)) {
                this.GetMyBidLines1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBidLines1OperationCompleted);
            }
            this.InvokeAsync("GetMyBidLines1", new object[] {
                        bidderNo,
                        tenderNo}, this.GetMyBidLines1OperationCompleted, userState);
        }
        
        private void OnGetMyBidLines1OperationCompleted(object arg) {
            if ((this.GetMyBidLines1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBidLines1Completed(this, new GetMyBidLines1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetMyBidLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetMyBidLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyBidLines(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("GetMyBidLines", new object[] {
                        bidderNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBidLinesAsync(string bidderNo, string tenderNo) {
            this.GetMyBidLinesAsync(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void GetMyBidLinesAsync(string bidderNo, string tenderNo, object userState) {
            if ((this.GetMyBidLinesOperationCompleted == null)) {
                this.GetMyBidLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBidLinesOperationCompleted);
            }
            this.InvokeAsync("GetMyBidLines", new object[] {
                        bidderNo,
                        tenderNo}, this.GetMyBidLinesOperationCompleted, userState);
        }
        
        private void OnGetMyBidLinesOperationCompleted(object arg) {
            if ((this.GetMyBidLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBidLinesCompleted(this, new GetMyBidLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetMyBids1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetMyBids1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyBids1(string bidderNo) {
            object[] results = this.Invoke("GetMyBids1", new object[] {
                        bidderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBids1Async(string bidderNo) {
            this.GetMyBids1Async(bidderNo, null);
        }
        
        /// <remarks/>
        public void GetMyBids1Async(string bidderNo, object userState) {
            if ((this.GetMyBids1OperationCompleted == null)) {
                this.GetMyBids1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBids1OperationCompleted);
            }
            this.InvokeAsync("GetMyBids1", new object[] {
                        bidderNo}, this.GetMyBids1OperationCompleted, userState);
        }
        
        private void OnGetMyBids1OperationCompleted(object arg) {
            if ((this.GetMyBids1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBids1Completed(this, new GetMyBids1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetMyBids", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetMyBids_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyBids(string bidderNo) {
            object[] results = this.Invoke("GetMyBids", new object[] {
                        bidderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBidsAsync(string bidderNo) {
            this.GetMyBidsAsync(bidderNo, null);
        }
        
        /// <remarks/>
        public void GetMyBidsAsync(string bidderNo, object userState) {
            if ((this.GetMyBidsOperationCompleted == null)) {
                this.GetMyBidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBidsOperationCompleted);
            }
            this.InvokeAsync("GetMyBids", new object[] {
                        bidderNo}, this.GetMyBidsOperationCompleted, userState);
        }
        
        private void OnGetMyBidsOperationCompleted(object arg) {
            if ((this.GetMyBidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBidsCompleted(this, new GetMyBidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetOpenTenderLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetOpenTenderLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenTenderLines(string documentNo) {
            object[] results = this.Invoke("GetOpenTenderLines", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenTenderLinesAsync(string documentNo) {
            this.GetOpenTenderLinesAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void GetOpenTenderLinesAsync(string documentNo, object userState) {
            if ((this.GetOpenTenderLinesOperationCompleted == null)) {
                this.GetOpenTenderLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenTenderLinesOperationCompleted);
            }
            this.InvokeAsync("GetOpenTenderLines", new object[] {
                        documentNo}, this.GetOpenTenderLinesOperationCompleted, userState);
        }
        
        private void OnGetOpenTenderLinesOperationCompleted(object arg) {
            if ((this.GetOpenTenderLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenTenderLinesCompleted(this, new GetOpenTenderLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetOpenTenders2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetOpenTenders2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenTenders2() {
            object[] results = this.Invoke("GetOpenTenders2", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenTenders2Async() {
            this.GetOpenTenders2Async(null);
        }
        
        /// <remarks/>
        public void GetOpenTenders2Async(object userState) {
            if ((this.GetOpenTenders2OperationCompleted == null)) {
                this.GetOpenTenders2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenTenders2OperationCompleted);
            }
            this.InvokeAsync("GetOpenTenders2", new object[0], this.GetOpenTenders2OperationCompleted, userState);
        }
        
        private void OnGetOpenTenders2OperationCompleted(object arg) {
            if ((this.GetOpenTenders2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenTenders2Completed(this, new GetOpenTenders2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetOpenTenders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetOpenTenders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenTenders() {
            object[] results = this.Invoke("GetOpenTenders", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenTendersAsync() {
            this.GetOpenTendersAsync(null);
        }
        
        /// <remarks/>
        public void GetOpenTendersAsync(object userState) {
            if ((this.GetOpenTendersOperationCompleted == null)) {
                this.GetOpenTendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenTendersOperationCompleted);
            }
            this.InvokeAsync("GetOpenTenders", new object[0], this.GetOpenTendersOperationCompleted, userState);
        }
        
        private void OnGetOpenTendersOperationCompleted(object arg) {
            if ((this.GetOpenTendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenTendersCompleted(this, new GetOpenTendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetPrequalificationApplicationCa" +
            "tegories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetPrequalificationApplicationCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPrequalificationApplicationCategories(string kraPin, string period) {
            object[] results = this.Invoke("GetPrequalificationApplicationCategories", new object[] {
                        kraPin,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrequalificationApplicationCategoriesAsync(string kraPin, string period) {
            this.GetPrequalificationApplicationCategoriesAsync(kraPin, period, null);
        }
        
        /// <remarks/>
        public void GetPrequalificationApplicationCategoriesAsync(string kraPin, string period, object userState) {
            if ((this.GetPrequalificationApplicationCategoriesOperationCompleted == null)) {
                this.GetPrequalificationApplicationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrequalificationApplicationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetPrequalificationApplicationCategories", new object[] {
                        kraPin,
                        period}, this.GetPrequalificationApplicationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetPrequalificationApplicationCategoriesOperationCompleted(object arg) {
            if ((this.GetPrequalificationApplicationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrequalificationApplicationCategoriesCompleted(this, new GetPrequalificationApplicationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetPrequalificationApplications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetPrequalificationApplications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPrequalificationApplications(string kraPin, string email) {
            object[] results = this.Invoke("GetPrequalificationApplications", new object[] {
                        kraPin,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrequalificationApplicationsAsync(string kraPin, string email) {
            this.GetPrequalificationApplicationsAsync(kraPin, email, null);
        }
        
        /// <remarks/>
        public void GetPrequalificationApplicationsAsync(string kraPin, string email, object userState) {
            if ((this.GetPrequalificationApplicationsOperationCompleted == null)) {
                this.GetPrequalificationApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrequalificationApplicationsOperationCompleted);
            }
            this.InvokeAsync("GetPrequalificationApplications", new object[] {
                        kraPin,
                        email}, this.GetPrequalificationApplicationsOperationCompleted, userState);
        }
        
        private void OnGetPrequalificationApplicationsOperationCompleted(object arg) {
            if ((this.GetPrequalificationApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrequalificationApplicationsCompleted(this, new GetPrequalificationApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetPrequalificationCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetPrequalificationCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPrequalificationCategories() {
            object[] results = this.Invoke("GetPrequalificationCategories", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrequalificationCategoriesAsync() {
            this.GetPrequalificationCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetPrequalificationCategoriesAsync(object userState) {
            if ((this.GetPrequalificationCategoriesOperationCompleted == null)) {
                this.GetPrequalificationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrequalificationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetPrequalificationCategories", new object[0], this.GetPrequalificationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetPrequalificationCategoriesOperationCompleted(object arg) {
            if ((this.GetPrequalificationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrequalificationCategoriesCompleted(this, new GetPrequalificationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:GetUnappliedPrequalificationCate" +
            "gories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="GetUnappliedPrequalificationCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetUnappliedPrequalificationCategories(string kraPin) {
            object[] results = this.Invoke("GetUnappliedPrequalificationCategories", new object[] {
                        kraPin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnappliedPrequalificationCategoriesAsync(string kraPin) {
            this.GetUnappliedPrequalificationCategoriesAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void GetUnappliedPrequalificationCategoriesAsync(string kraPin, object userState) {
            if ((this.GetUnappliedPrequalificationCategoriesOperationCompleted == null)) {
                this.GetUnappliedPrequalificationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnappliedPrequalificationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetUnappliedPrequalificationCategories", new object[] {
                        kraPin}, this.GetUnappliedPrequalificationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetUnappliedPrequalificationCategoriesOperationCompleted(object arg) {
            if ((this.GetUnappliedPrequalificationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnappliedPrequalificationCategoriesCompleted(this, new GetUnappliedPrequalificationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:InsertTenderSubmissionLine1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="InsertTenderSubmissionLine1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertTenderSubmissionLine1(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmnt) {
            object[] results = this.Invoke("InsertTenderSubmissionLine1", new object[] {
                        bidderNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmnt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTenderSubmissionLine1Async(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmnt) {
            this.InsertTenderSubmissionLine1Async(bidderNo, tenderNo, bidNo, itemNo, quotedAmnt, null);
        }
        
        /// <remarks/>
        public void InsertTenderSubmissionLine1Async(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmnt, object userState) {
            if ((this.InsertTenderSubmissionLine1OperationCompleted == null)) {
                this.InsertTenderSubmissionLine1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTenderSubmissionLine1OperationCompleted);
            }
            this.InvokeAsync("InsertTenderSubmissionLine1", new object[] {
                        bidderNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmnt}, this.InsertTenderSubmissionLine1OperationCompleted, userState);
        }
        
        private void OnInsertTenderSubmissionLine1OperationCompleted(object arg) {
            if ((this.InsertTenderSubmissionLine1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTenderSubmissionLine1Completed(this, new InsertTenderSubmissionLine1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:InsertTenderSubmissionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="InsertTenderSubmissionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertTenderSubmissionLine(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt) {
            object[] results = this.Invoke("InsertTenderSubmissionLine", new object[] {
                        bidderNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTenderSubmissionLineAsync(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt) {
            this.InsertTenderSubmissionLineAsync(bidderNo, tenderNo, bidNo, itemNo, quotedAmt, null);
        }
        
        /// <remarks/>
        public void InsertTenderSubmissionLineAsync(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt, object userState) {
            if ((this.InsertTenderSubmissionLineOperationCompleted == null)) {
                this.InsertTenderSubmissionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTenderSubmissionLineOperationCompleted);
            }
            this.InvokeAsync("InsertTenderSubmissionLine", new object[] {
                        bidderNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmt}, this.InsertTenderSubmissionLineOperationCompleted, userState);
        }
        
        private void OnInsertTenderSubmissionLineOperationCompleted(object arg) {
            if ((this.InsertTenderSubmissionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTenderSubmissionLineCompleted(this, new InsertTenderSubmissionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:NotAllMandatoryDocumentsAttached" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="NotAllMandatoryDocumentsAttached_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool NotAllMandatoryDocumentsAttached(string bidderVat, string category) {
            object[] results = this.Invoke("NotAllMandatoryDocumentsAttached", new object[] {
                        bidderVat,
                        category});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotAllMandatoryDocumentsAttachedAsync(string bidderVat, string category) {
            this.NotAllMandatoryDocumentsAttachedAsync(bidderVat, category, null);
        }
        
        /// <remarks/>
        public void NotAllMandatoryDocumentsAttachedAsync(string bidderVat, string category, object userState) {
            if ((this.NotAllMandatoryDocumentsAttachedOperationCompleted == null)) {
                this.NotAllMandatoryDocumentsAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotAllMandatoryDocumentsAttachedOperationCompleted);
            }
            this.InvokeAsync("NotAllMandatoryDocumentsAttached", new object[] {
                        bidderVat,
                        category}, this.NotAllMandatoryDocumentsAttachedOperationCompleted, userState);
        }
        
        private void OnNotAllMandatoryDocumentsAttachedOperationCompleted(object arg) {
            if ((this.NotAllMandatoryDocumentsAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotAllMandatoryDocumentsAttachedCompleted(this, new NotAllMandatoryDocumentsAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:PrequalificationApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="PrequalificationApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool PrequalificationApplied(string kraPin, string email) {
            object[] results = this.Invoke("PrequalificationApplied", new object[] {
                        kraPin,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PrequalificationAppliedAsync(string kraPin, string email) {
            this.PrequalificationAppliedAsync(kraPin, email, null);
        }
        
        /// <remarks/>
        public void PrequalificationAppliedAsync(string kraPin, string email, object userState) {
            if ((this.PrequalificationAppliedOperationCompleted == null)) {
                this.PrequalificationAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrequalificationAppliedOperationCompleted);
            }
            this.InvokeAsync("PrequalificationApplied", new object[] {
                        kraPin,
                        email}, this.PrequalificationAppliedOperationCompleted, userState);
        }
        
        private void OnPrequalificationAppliedOperationCompleted(object arg) {
            if ((this.PrequalificationAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrequalificationAppliedCompleted(this, new PrequalificationAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:SubmitBid1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="SubmitBid1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitBid1(string bidderNo, string bidNo) {
            object[] results = this.Invoke("SubmitBid1", new object[] {
                        bidderNo,
                        bidNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBid1Async(string bidderNo, string bidNo) {
            this.SubmitBid1Async(bidderNo, bidNo, null);
        }
        
        /// <remarks/>
        public void SubmitBid1Async(string bidderNo, string bidNo, object userState) {
            if ((this.SubmitBid1OperationCompleted == null)) {
                this.SubmitBid1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBid1OperationCompleted);
            }
            this.InvokeAsync("SubmitBid1", new object[] {
                        bidderNo,
                        bidNo}, this.SubmitBid1OperationCompleted, userState);
        }
        
        private void OnSubmitBid1OperationCompleted(object arg) {
            if ((this.SubmitBid1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBid1Completed(this, new SubmitBid1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:SubmitBid", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="SubmitBid_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitBid(string bidderNo, string bidNo) {
            object[] results = this.Invoke("SubmitBid", new object[] {
                        bidderNo,
                        bidNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBidAsync(string bidderNo, string bidNo) {
            this.SubmitBidAsync(bidderNo, bidNo, null);
        }
        
        /// <remarks/>
        public void SubmitBidAsync(string bidderNo, string bidNo, object userState) {
            if ((this.SubmitBidOperationCompleted == null)) {
                this.SubmitBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBidOperationCompleted);
            }
            this.InvokeAsync("SubmitBid", new object[] {
                        bidderNo,
                        bidNo}, this.SubmitBidOperationCompleted, userState);
        }
        
        private void OnSubmitBidOperationCompleted(object arg) {
            if ((this.SubmitBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBidCompleted(this, new SubmitBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:SubmitPrequalificationApplicatio" +
            "n", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="SubmitPrequalificationApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitPrequalificationApplication(string kRAPin, string email) {
            object[] results = this.Invoke("SubmitPrequalificationApplication", new object[] {
                        kRAPin,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitPrequalificationApplicationAsync(string kRAPin, string email) {
            this.SubmitPrequalificationApplicationAsync(kRAPin, email, null);
        }
        
        /// <remarks/>
        public void SubmitPrequalificationApplicationAsync(string kRAPin, string email, object userState) {
            if ((this.SubmitPrequalificationApplicationOperationCompleted == null)) {
                this.SubmitPrequalificationApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitPrequalificationApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitPrequalificationApplication", new object[] {
                        kRAPin,
                        email}, this.SubmitPrequalificationApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitPrequalificationApplicationOperationCompleted(object arg) {
            if ((this.SubmitPrequalificationApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitPrequalificationApplicationCompleted(this, new SubmitPrequalificationApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:TenderApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="TenderApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool TenderApplied(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("TenderApplied", new object[] {
                        bidderNo,
                        tenderNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TenderAppliedAsync(string bidderNo, string tenderNo) {
            this.TenderAppliedAsync(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void TenderAppliedAsync(string bidderNo, string tenderNo, object userState) {
            if ((this.TenderAppliedOperationCompleted == null)) {
                this.TenderAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTenderAppliedOperationCompleted);
            }
            this.InvokeAsync("TenderApplied", new object[] {
                        bidderNo,
                        tenderNo}, this.TenderAppliedOperationCompleted, userState);
        }
        
        private void OnTenderAppliedOperationCompleted(object arg) {
            if ((this.TenderAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TenderAppliedCompleted(this, new TenderAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:ValidEmailAddress", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="ValidEmailAddress_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidEmailAddress(string email) {
            object[] results = this.Invoke("ValidEmailAddress", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidEmailAddressAsync(string email) {
            this.ValidEmailAddressAsync(email, null);
        }
        
        /// <remarks/>
        public void ValidEmailAddressAsync(string email, object userState) {
            if ((this.ValidEmailAddressOperationCompleted == null)) {
                this.ValidEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidEmailAddressOperationCompleted);
            }
            this.InvokeAsync("ValidEmailAddress", new object[] {
                        email}, this.ValidEmailAddressOperationCompleted, userState);
        }
        
        private void OnValidEmailAddressOperationCompleted(object arg) {
            if ((this.ValidEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidEmailAddressCompleted(this, new ValidEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:ValidVATno", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="ValidVATno_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidVATno(string vATno) {
            object[] results = this.Invoke("ValidVATno", new object[] {
                        vATno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidVATnoAsync(string vATno) {
            this.ValidVATnoAsync(vATno, null);
        }
        
        /// <remarks/>
        public void ValidVATnoAsync(string vATno, object userState) {
            if ((this.ValidVATnoOperationCompleted == null)) {
                this.ValidVATnoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidVATnoOperationCompleted);
            }
            this.InvokeAsync("ValidVATno", new object[] {
                        vATno}, this.ValidVATnoOperationCompleted, userState);
        }
        
        private void OnValidVATnoOperationCompleted(object arg) {
            if ((this.ValidVATnoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidVATnoCompleted(this, new ValidVATnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:ValidateEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="ValidateEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidateEmail(string email) {
            object[] results = this.Invoke("ValidateEmail", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateEmailAsync(string email) {
            this.ValidateEmailAsync(email, null);
        }
        
        /// <remarks/>
        public void ValidateEmailAsync(string email, object userState) {
            if ((this.ValidateEmailOperationCompleted == null)) {
                this.ValidateEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateEmailOperationCompleted);
            }
            this.InvokeAsync("ValidateEmail", new object[] {
                        email}, this.ValidateEmailOperationCompleted, userState);
        }
        
        private void OnValidateEmailOperationCompleted(object arg) {
            if ((this.ValidateEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateEmailCompleted(this, new ValidateEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Supplier:ValidateVATno", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", ResponseElementName="ValidateVATno_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Supplier", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidateVATno(string vATno) {
            object[] results = this.Invoke("ValidateVATno", new object[] {
                        vATno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateVATnoAsync(string vATno) {
            this.ValidateVATnoAsync(vATno, null);
        }
        
        /// <remarks/>
        public void ValidateVATnoAsync(string vATno, object userState) {
            if ((this.ValidateVATnoOperationCompleted == null)) {
                this.ValidateVATnoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateVATnoOperationCompleted);
            }
            this.InvokeAsync("ValidateVATno", new object[] {
                        vATno}, this.ValidateVATnoOperationCompleted, userState);
        }
        
        private void OnValidateVATnoOperationCompleted(object arg) {
            if ((this.ValidateVATnoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateVATnoCompleted(this, new ValidateVATnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AccountActivatedCompletedEventHandler(object sender, AccountActivatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountActivatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountActivatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ActivateBidderAccountCompletedEventHandler(object sender, ActivateBidderAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateBidderAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateBidderAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddedCategoryCompletedEventHandler(object sender, AddedCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddedCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddedCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ChangeBidderPasswordCompletedEventHandler(object sender, ChangeBidderPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeBidderPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeBidderPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckBidderLoginCompletedEventHandler(object sender, CheckBidderLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBidderLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBidderLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckExistingRFQCompletedEventHandler(object sender, CheckExistingRFQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckExistingRFQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckExistingRFQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateBidderAccountCompletedEventHandler(object sender, CreateBidderAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBidderAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBidderAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreatePrequalificationHeaderCompletedEventHandler(object sender, CreatePrequalificationHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePrequalificationHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePrequalificationHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreatePrequalificationLineCompletedEventHandler(object sender, CreatePrequalificationLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePrequalificationLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePrequalificationLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTenderSubmissionHeader1CompletedEventHandler(object sender, CreateTenderSubmissionHeader1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTenderSubmissionHeader1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTenderSubmissionHeader1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTenderSubmissionHeaderCompletedEventHandler(object sender, CreateTenderSubmissionHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTenderSubmissionHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTenderSubmissionHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DocumentAttachmentCompletedEventHandler(object sender, DocumentAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FileAttachedCompletedEventHandler(object sender, FileAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAppliedPrequalificationCategoriesCompletedEventHandler(object sender, GetAppliedPrequalificationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppliedPrequalificationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppliedPrequalificationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBidderDetailsCompletedEventHandler(object sender, GetBidderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBidderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBidderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBidderNameCompletedEventHandler(object sender, GetBidderNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBidderNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBidderNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryNameCompletedEventHandler(object sender, GetCategoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryRequirementsCompletedEventHandler(object sender, GetCategoryRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCurrentPrequalificationPeriodCompletedEventHandler(object sender, GetCurrentPrequalificationPeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentPrequalificationPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentPrequalificationPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLastPrnNoCompletedEventHandler(object sender, GetLastPrnNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastPrnNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastPrnNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyBidLines1CompletedEventHandler(object sender, GetMyBidLines1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBidLines1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBidLines1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyBidLinesCompletedEventHandler(object sender, GetMyBidLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBidLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBidLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyBids1CompletedEventHandler(object sender, GetMyBids1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBids1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBids1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyBidsCompletedEventHandler(object sender, GetMyBidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOpenTenderLinesCompletedEventHandler(object sender, GetOpenTenderLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenTenderLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenTenderLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOpenTenders2CompletedEventHandler(object sender, GetOpenTenders2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenTenders2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenTenders2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOpenTendersCompletedEventHandler(object sender, GetOpenTendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenTendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenTendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrequalificationApplicationCategoriesCompletedEventHandler(object sender, GetPrequalificationApplicationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrequalificationApplicationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrequalificationApplicationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrequalificationApplicationsCompletedEventHandler(object sender, GetPrequalificationApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrequalificationApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrequalificationApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPrequalificationCategoriesCompletedEventHandler(object sender, GetPrequalificationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrequalificationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrequalificationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUnappliedPrequalificationCategoriesCompletedEventHandler(object sender, GetUnappliedPrequalificationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnappliedPrequalificationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnappliedPrequalificationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTenderSubmissionLine1CompletedEventHandler(object sender, InsertTenderSubmissionLine1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTenderSubmissionLine1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTenderSubmissionLine1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTenderSubmissionLineCompletedEventHandler(object sender, InsertTenderSubmissionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTenderSubmissionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTenderSubmissionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void NotAllMandatoryDocumentsAttachedCompletedEventHandler(object sender, NotAllMandatoryDocumentsAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotAllMandatoryDocumentsAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotAllMandatoryDocumentsAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PrequalificationAppliedCompletedEventHandler(object sender, PrequalificationAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrequalificationAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrequalificationAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitBid1CompletedEventHandler(object sender, SubmitBid1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBid1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBid1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitBidCompletedEventHandler(object sender, SubmitBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitPrequalificationApplicationCompletedEventHandler(object sender, SubmitPrequalificationApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitPrequalificationApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitPrequalificationApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TenderAppliedCompletedEventHandler(object sender, TenderAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TenderAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TenderAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidEmailAddressCompletedEventHandler(object sender, ValidEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidVATnoCompletedEventHandler(object sender, ValidVATnoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidVATnoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidVATnoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateEmailCompletedEventHandler(object sender, ValidateEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateVATnoCompletedEventHandler(object sender, ValidateVATnoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateVATnoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateVATnoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
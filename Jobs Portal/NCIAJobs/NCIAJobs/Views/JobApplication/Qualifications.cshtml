@model NCIAJobs.Models.Applicant

@{
    ViewBag.Title = "Qualifications";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-content">
    <div class="row">
        <div class="col-md-12">
            <!-- BEGIN EXAMPLE TABLE PORTLET-->
            <div class="portlet light portlet-fit bordered">
                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger">
                        <button class="close" data-close="alert"></button>
                        <span>@TempData["Error"]</span>
                    </div>
                }
                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success">
                        <button class="close" data-close="alert"></button>
                        <span>@TempData["Success"]</span>
                    </div>
                }
                <div class="portlet-title">
                    <div class="caption">
                        <i class="icon-settings font-red"></i>
                        <span class="caption-subject font-red sbold uppercase">Step 2 : Academic Qualifications</span>
                    </div>
                </div>
                <div class="portlet-body">
                    <form action="@Url.Action("submitqualification","jobapplication")" method="post" enctype="multipart/form-data">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Area of Study</label> <span class="text-danger">*</span>
                                    @Html.DropDownListFor(m => m.AreaOfStudy, new SelectList(Model.AreasOfStudy, "Code", "Description"), new { @class = "form-control", id = "study-area" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Area of Specialization</label> <span class="text-danger">*</span>
                                    <select name="AreaOfSpecialization" class="form-control" id="area-of-specialization" required></select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Awards</label> <span class="text-danger">*</span>
                                    <select name="Award" class="form-control" id="award" required></select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Courses</label> <span class="text-danger">*</span>
                                    <select name="Course" class="form-control" id="course" required></select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Grade</label> <span class="text-danger">*</span>
                                    <select name="Grade" class="form-control" id="grade" required></select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Institution</label> <span class="text-danger">*</span>
                                    <input type="text" name="Institution" class="form-control" placeholder="Institution" required />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>From</label> <span class="text-danger">*</span>
                                    <input type="date" name="DateFrom" id="date-from" class="form-control" placeholder="From Date" required />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>To</label> <span class="text-danger">*</span>
                                    <input type="date" name="DateTo" id="date-to" class="form-control" placeholder="To Date" required />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Choose file to Upload</label>
                                    <input type="file" name="AttachmentFile" class="form-control" required />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary" id="btn-academic" onclick="return validateInputs()"><i class="fa fa-pen"></i> Add</button>
                                </div>
                            </div>
                        </div>
                    </form>
                    <br />
                    <div class="row">
                        <div class="col-md-12">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Institution</th>
                                        <th>Course</th>
                                        <th>From Date</th>
                                        <th>To Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.ApplicantQualifications)
                                    {
                                        <tr>
                                            <td>@item.Institution</td>
                                            <td>@item.Course</td>
                                            <td>@Convert.ToDateTime(item.DateFrom).ToShortDateString()</td>
                                            <td>@Convert.ToDateTime(item.DateTo).ToShortDateString()</td>
                                            <td><a href="@Url.Action("removequalification", "jobapplication", new { id = item.SystemId })" class="text-danger"><i class="fa fa-trash-alt"></i></a></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-12">
                            @*<a class="btn btn-warning pull-left" href="@Url.Action("minimumrequirements","jobapplication")">Back</a>*@
                            <a class="btn btn-primary pull-right" href="@Url.Action("navigateproffessionalqual","jobapplication")">Next</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const dateFrom = document.getElementById('date-from');
    const dateTo = document.getElementById('date-to');
    const areaOfStudy = document.getElementById('study-area');
    const areaOfSpecialization = document.getElementById('area-of-specialization');
    const award = document.getElementById('award');
    const course = document.getElementById('course');
    const grade = document.getElementById('grade');

    const getGrades = async function () {
        grade.innerHTML = '';
        const courseValue = course.value;
        const response = await fetch(`/api/getgrades?course=${courseValue}`);
        const data = await response.json();
        let html = '';
        data.forEach(function (item, i, arr) {
            html += `<option value=${item.Code}>${item.Description}</option>`;
        })
        grade.innerHTML = html;
    }

    const getCourses = async function () {
        course.innerHTML = '';
        const awardValue = award.value;
        const areaOfSpecializationValue = areaOfSpecialization.value;
        const response = await fetch(`/api/getcourses?award=${awardValue}&areaOfSpecialization=${areaOfSpecializationValue}`);
        const data = await response.json();
        let html = '';
        data.forEach(function (item, i, arr) {
            html += `<option value=${item.Code}>${item.Description}</option>`;
        })
        course.innerHTML = html;
        getGrades();
    }

    const getAwards = async function () {
        award.innerHTML = '';
        const specializationArea = areaOfSpecialization.value;
        const response = await fetch(`/api/getawards?areaOfSpecialization=${specializationArea}`);
        const data = await response.json();
        let html = '';
        data.forEach(function (item, i, arr) {
            html += `<option value=${item.Code}>${item.Description}</option>`
        });
        award.innerHTML = html;
        getCourses();
    }

    const getAreasOfSpecialization = async function () {
        areaOfSpecialization.innerHTML = '';
        const studyArea = areaOfStudy.value;
        const response = await fetch(`/api/getareasofspecialization?areaOfStudy=${studyArea}`);
        const data = await response.json();
        let html = '';
        data.forEach(function (item, i, arr) {
            html += `<option value=${item.Code}>${item.Description}</option>`;
        });
        areaOfSpecialization.innerHTML = html;
        getAwards();
    }
    getAreasOfSpecialization();
    areaOfStudy.addEventListener('change', getAreasOfSpecialization);
    areaOfSpecialization.addEventListener('change', getAwards);
    award.addEventListener('change', getCourses);
    course.addEventListener('change', getGrades);

    const validateInputs = function () {
        if (dateFrom.value === '') {
            alert('Date from cannot be empty');
            dateFrom.focus();
            return false;
        }

        if (dateTo.value === '') {
            alert('Date to cannot be empty');
            dateTo.focus();
            return false;
        }

        const fromDate = new Date(dateFrom.value);
        const toDate = new Date(dateTo.value);
        if (toDate <= fromDate) {
            alert('To date cannot be greater than or equal to from date!');
            return false;
        }
    }
</script>

